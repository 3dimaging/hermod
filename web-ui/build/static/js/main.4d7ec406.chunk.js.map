{"version":3,"sources":["../../hermod-react-satellite/dist/index.es.js","App.js","index.js"],"names":["index_es_classCallCheck","instance","Constructor","TypeError","index_es_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","index_es_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","index_es_possibleConstructorReturn","self","ReferenceError","mqtt","__webpack_require__","HermodMqttServer","this","failCount","mqttClient","sessionId","clientId","parseInt","Math","random","state","connectTimeout","started","onMessageArrived","bind","onConnect","mqttConnect","newState","end","port","mqttPort","server","mqttServer","window","location","hostname","console","log","host","username","password","subscribe","connect","on","error","err","that","setState","connected","afterConnect","topic","message","eventFunctions","hermod/+/hotword/start","siteId","payload","Promise","resolve","reject","hotwordListening","updateSession","session","hotword","hotwordDetected","updateSessionStatus","hermod/+/hotword/stop","hermod/+/hotword/detected","hermod/+/nlu/started","hermod/+/nlu/parse","hermod/+/nlu/intent","hermod/+/nlu/fail","hermod/+/nlu/slot","hermod/+/tts/say","tts","push","hermod/+/tts/sayFinished","hermod/+/asr/start","resetAudioBuffer","audioListening","hermod/+/asr/stop","logAudioBuffer","hermod/+/asr/text","asr","hermod/+/asr/partial","hermod/+/dialog/start","hermod/+/dialog/continue","hermod/dialog/end","hermod/+/dialog/started","queued","starttimestamp","Date","getTime","lastSessionId","hermod/+/dialog/ended","success","ended","endtimestamp","hermod/+/intent","intents","hermod/+/microphone/audio","x","crunker","fn","module","exports","createCommonjsModule","e","t","n","r","o","l","m","c","d","get","Symbol","toStringTag","__esModule","default","p","s","sampleRate","_sampleRate","_context","_createContext","AudioContext","webkitAudioContext","mozAudioContext","_value","asyncToGenerator","regenerator_default","a","mark","_callee2","_args2","wrap","_context2","prev","next","Array","map","_ref","_callee","fetch","then","arrayBuffer","sent","decodeAudioData","abrupt","stop","_x","apply","all","createBuffer","_maxDuration","getChannelData","_totalLength","set","createBufferSource","buffer","destination","start","_interleave","_writeHeaders","Blob","type","blob","url","_renderURL","element","_renderAudioElement","document","createElement","style","href","download","split","click","_isSupported","close","max","duration","reduce","ArrayBuffer","DataView","_writeString","setUint32","setUint16","_floatTo16BitPCM","min","setInt16","setUint8","charCodeAt","Float32Array","controls","src","URL","webkitURL","createObjectURL","Crunker","HermodLogger$1","_HermodMqttServer","HermodLogger","_this","getPrototypeOf","eventCallbackFunctions","addCallbacks","sites","messages","showLogMessages","sessionStatus","sessionStatusText","audioBuffers","getSession","saveSession","findEventCallbackFunctions","isConnected","reset","oneOff","undefined","isArray","keys","loopKey","subscription","callBack","id","subscriptionKey","ret","vkey","mqttWildcard","wildcard","res","String","w","lt","slice","join","ii","uuid","toString","destinationName","payloadBytes","payloadString","parts","runServiceCallbacks","functionKey","callbacks","ckey","_payload","audio","appendAudioBuffer","JSON","parse","thisState","node_modules_react_default","backgroundColor","stringify","text","matchingEventFunction","catch","slots","final","slot","slotName","kind","siteIdIn","sessionIdIn","findOrCreateSession","sessions","newSession","createtimestamp","callback","result","setLogData","siteKey","sessionKey","statusText","allSessionsStatus","allSessionsStatusText","logAudio","getAudioBuffer","promises","context","bytes","Uint8Array","audioBuffer","allBuffers","merger","output","export","concatAudio","blobToDataUrl","dataUrl","fulfill","reader","FileReader","onerror","onload","readAsDataURL","publish","_payload2","index_es_HermodReactComponent","_Component","HermodReactComponent","logger","queueOneOffCallbacks","connectToLogger","sendMqtt","hotwordId","customData","node_modules_react","index_es_HermodReactMicrophone","_HermodReactComponent","HermodReactMicrophone","startRecording","lastIntent","lastTts","lastTranscript","showMessage","sendStartSession","startedBy","user","_id","stopRecording","sendEndSession","recording","activated","speaking","showConfig","listening","gainNode","messageTimeout","speakingTimeout","speechEvents","startRecorder","sendAudioBuffer","audioBufferToWav","reSample","encodeWAV","interleave","flashState","activate","deactivate","showConfigNow","clearConfigTimer","waitingForSession","configTimeout","hermod/+/microphone/start","sending","hermod/+/microphone/stop","setTimeout","preventDefault","stopPropagation","clearTimeout","localStorage","setItem","appendUserId","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","createGain","gain","config","inputvolume","audioInput","createMediaStreamSource","recorder","createScriptProcessor","onaudioprocess","inputBuffer","addInputGainNode","node","inputGainNodes","enablenotifications","messageTimeOut","newObj","wav","sendAudioMqtt","buf","Int16Array","inChannelBuffer","recordingLength","channelBuffer","convertFloat32ToInt16","offset","targetSampleRate","onComplete","sampleRateContext","isNaN","channel","numberOfChannels","samples","offlineContext","OfflineAudioContext","bufferSource","startRendering","renderedBuffer","opt","numChannels","format","float32","bitDepth","bytesPerSample","blockAlign","view","writeString","floatTo16BitPCM","writeFloat32","inputL","inputR","index","inputIndex","input","setFloat32","string","buttonStyle","size","width","height","position","top","left","right","bottom","status","borderColor","borderWidth","padding","margin","border","borderRadius","micOffIcon","aria-hidden","data-prefix","data-icon","className","role","xmlns","viewBox","fill","micOnIcon","zIndex","onClick","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","onContextMenu","color","fontStyle","index_es_HermodReactSpeaker","HermodReactSpeaker","playSound","setVolume","volume","hermod/#/speaker/play","hermod/#/hotword/detected","enableaudio","outputvolume","onended","index_es_HermodAppServer","HermodAppServer","hermod/intent/#","intent","v","Resources","keywordIDs","ok lamp","navy blue","index_es_HermodReactHotwordServer","HermodReactHotwordServer","sensitivities","hotwordManager","sendHotwordDetected","sendHotwordToggleOn","startHotword","stopHotword","hotwordCallback","hermod/#/hotword/start","hermod/#/hotword/stop","startsWith","pauseProcessing","localHotword","PicovoiceAudioManager","singleSensitivity","hotwordsensitivity","selectedKeyword","Porcupine","continueProcessing","index_es_HermodReactTts","HermodReactTts","hermod/#/tts/say","say","initSpeechSynthesis","enablevoice","enabletts","voice","ttsvoice","speak","amplitude","parseFloat","voicevolume","pitch","voicepitch","speed","voicerate","msg","SpeechSynthesisUtterance","rate","speechSynthesis","getVoices","forEach","voiceItem","name","loadVoices","voices","voiceOptions","label","onvoiceschanged","index_es_HermodReactLogger","HermodReactLogger","showLog","toggleMessageExpansion","isLogMessageExpanded","isLogExpanded","toggleLogExpansion","index_es_HermodReactFlatLogger","HermodReactFlatLogger","logs","val","nav","mediaDevices","y","alert","Error","msAudioContext","index_es_AudioMeter","AudioMeter","debug","process","event","sum","rms","sqrt","averaging","volumeWarning","canvasCtx","fillStyle","tooLoudColor","clearRect","canvas","fillRect","stream","audioCtx","processor","refs","getContext","canvasStyle","ref","index_es_HermodReactConfig","HermodReactConfig","hideConfig","resetConfig","loadSpeechSynthesisVoices","newConfig","getDefaultConfig","configurationChange","resetIcon","inputStyle","marginBottom","fontSize","minHeight","float","fontWeight","marginRight","stopIcon2","clear","dtooLoudColor","scolor","htmlFor","onChange","sendTestSay","index_es_HermodReactSatellite","HermodReactSatellite","setConfig","configString","getItem","App","classCallCheck","possibleConstructorReturn","assertThisInitialized","syntithenai:open_window","cleanSlots","search_topic","syntithenai:close_window","syntithenai:list_windows","syntithenai:get_time","now","minutes","getMinutes","hours","getHours","amPm","syntithenai:get_date","day","getDate","month","getMonth","year","getFullYear","waiting","token","react_default","Component","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.4d7ec406.chunk.js","sourcesContent":["import _regeneratorRuntime from \"/windata/projects/hermod/web-ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/windata/projects/hermod/web-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { Component } from 'react';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar mqtt = require('mqtt');\n\nvar HermodMqttServer = function () {\n  function HermodMqttServer(props) {\n    classCallCheck(this, HermodMqttServer);\n    this.props = props;\n    this.failCount = 0;\n    this.mqttClient = null;\n    this.sessionId = null;\n    this.clientId = props.clientId ? props.clientId : 'client' + parseInt(Math.random() * 100000000, 10);\n    this.state = {};\n    this.connectTimeout = null;\n    this.started = false;\n    this.onMessageArrived = this.onMessageArrived.bind(this);\n    this.onConnect = this.onConnect.bind(this); //this.onConnectionLost = this.onConnectionLost.bind(this);\n\n    this.mqttConnect = this.mqttConnect.bind(this);\n  }\n\n  createClass(HermodMqttServer, [{\n    key: 'setState',\n    value: function setState(newState) {\n      return Object.assign(this.state, newState);\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      this.started = true;\n      this.mqttConnect();\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.started = false;\n      if (this.mqttClient) this.mqttClient.end();\n    }\n  }, {\n    key: 'mqttConnect',\n\n    /**\n      * Connect to mqtt server\n     */\n    value: function mqttConnect() {\n      var port = this.props.mqttPort && this.props.mqttPort > 0 ? parseInt(this.props.mqttPort, 10) : 9001;\n      var server = this.props.mqttServer && this.props.mqttServer.length > 0 ? this.props.mqttServer : window.location.hostname;\n      console.log(['CONNECT', {\n        host: server,\n        port: port,\n        username: this.props.username,\n        password: this.props.password\n      }, this.props.subscribe]);\n      this.mqttClient = mqtt.connect({\n        host: server,\n        port: port,\n        username: this.props.username,\n        password: this.props.password\n      });\n      this.mqttClient.on('connect', this.onConnect);\n      this.mqttClient.on('error', console.error);\n      this.mqttClient.on('offline', console.log);\n      this.mqttClient.on('reconnect', console.log);\n      this.mqttClient.on('close', console.log);\n      this.mqttClient.on('end', console.log); //this.mqttClient.on('message', console.log)\n\n      this.mqttClient.on('packetsend', console.log);\n      this.mqttClient.on('packetreceive', console.log); //this.onMessageArrived\n\n      this.mqttClient.on('message', this.onMessageArrived); //function (topic, message) {\n      //// message is Buffer\n      //console.log(message.toString())\n      //this.mqttClient.end()\n      //})\n      //this.mqttClient = new Paho.MQTT.Client(server,port, this.clientId);\n      //this.mqttClient.onConnectionLost = this.onConnectionLost;\n      //this.mqttClient.onMessageArrived = this.onMessageArrived;\n      //this.mqttClient.connect({onSuccess:this.onConnect});\n    }\n  }, {\n    key: 'onConnect',\n\n    /**\n     * Subscribe to to mqtt channels then start recorder\n     */\n    value: function onConnect(err) {\n      //\tif (err) console.log(['CONNECT ERROR',err])\n      var that = this;\n      console.log([' SERVER CONNECTED', this.props]);\n      this.setState({\n        'connected': true\n      });\n      this.failCount = 0;\n      var subscribe = this.props.subscribe && this.props.subscribe.length > 0 ? this.props.subscribe : '#';\n      console.log(['init sub to ', subscribe]);\n      that.mqttClient.subscribe(subscribe, function (err) {\n        if (err) console.log(['SUBSCRIBE ERROR', err]);\n        console.log(['init sub oDk ']);\n        that.afterConnect(that);\n      });\n    }\n  }, {\n    key: 'afterConnect',\n    value: function afterConnect() {//console.log([' after CONNECTED']);\n    }\n  }, {\n    key: 'onMessageArrived',\n\n    /**\n     * When the client loses its connection, reconnect after 5s\n     */\n    //onConnectionLost(responseObject) {\n    //let that = this;\n    //this.setState({'connected':false});\n    //if (responseObject.errorCode !== 0) {\n    //console.log([\"  SERVER onConnectionLost:\"+responseObject.errorMessage]);\n    //if (this.props.onConnectionLost && typeof this.props.onConnectionLost === \"function\") {\n    //this.props.onConnectionLost(this);\n    //} else {\n    //let timeout=1000;\n    //if (this.failCount > 5) {\n    //timeout=10000;\n    //} else if (this.failCount > 10) {\n    //timeout=30000;\n    //} else if (this.failCount > 15) {\n    //timeout=360000;\n    //}\n    //this.failCount++;\n    //clearTimeout(this.connectTimeout);\n    //this.connectTimeout = setTimeout(function() {\n    //that.mqttClient.connect({onSuccess:that.onConnect});  \n    //},timeout)                \n    //}\n    //}\n    //}\n    //;\n    // respond to hermod/hotword/toggleOn or toggleOff where the siteId matches props.siteId\n    value: function onMessageArrived(topic, message) {// console.log(['IMPLEMENT ONMESSAGE',message]);\n    }\n  }]);\n  return HermodMqttServer;\n}();\n\nvar eventFunctions = {\n  /* Hotword */\n  'hermod/+/hotword/start': function hermodHotwordStart(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      var hotwordListening = that.state.hotwordListening;\n      hotwordListening[siteId] = true;\n      that.setState({\n        hotwordListening: hotwordListening\n      });\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          session.hotword = true;\n          session.hotwordDetected = false;\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/hotword/stop': function hermodHotwordStop(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      var hotwordListening = that.state.hotwordListening;\n      hotwordListening[siteId] = false;\n      that.setState({\n        hotwordListening: hotwordListening\n      });\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          session.hotword = false;\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/hotword/detected': function hermodHotwordDetected(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          session.hotwordDetected = true;\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n\n  /* NLU */\n  'hermod/+/nlu/started': function hermodNluStarted(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/nlu/parse': function hermodNluParse(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/nlu/intent': function hermodNluIntent(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/nlu/fail': function hermodNluFail(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/nlu/slot': function hermodNluSlot(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n\n  /* TTS */\n  'hermod/+/tts/say': function hermodTtsSay(topic, siteId, payload) {\n    var that = this; //console.log(['LOG TTS']);\n\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          if (!session.tts) session.tts = [];\n          session.tts.push(payload);\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/tts/sayFinished': function hermodTtsSayFinished(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/asr/start': function hermodAsrStart(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      if (payload) {\n        that.resetAudioBuffer(siteId);\n        var audioListening = that.state.audioListening;\n        audioListening[siteId] = true;\n        that.setState({\n          audioListening: audioListening\n        });\n        that.updateSession(siteId, payload, function (session) {\n          if (session && payload) that.updateSessionStatus(siteId, session);\n          return session;\n        });\n      }\n\n      resolve(); // console.log(['START ASR']);\n    });\n  },\n  'hermod/+/asr/stop': function hermodAsrStop(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      var audioListening = that.state.audioListening;\n      audioListening[siteId] = false;\n      that.setState({\n        audioListening: audioListening\n      }); // log audio\n\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          that.logAudioBuffer(payload);\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/asr/text': function hermodAsrText(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          if (!session.asr) session.asr = [];\n          session.asr.push(payload);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/asr/partial': function hermodAsrPartial(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/dialog/start': function hermodDialogStart(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/dialog/continue': function hermodDialogContinue(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/dialog/end': function hermodDialogEnd(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  },\n  'hermod/+/dialog/started': function hermodDialogStarted(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          session.started = true;\n          session.queued = true;\n          session.starttimestamp = new Date().getTime();\n          session.sessionId = payload.sessionId;\n          session.siteId = siteId;\n          that.updateSessionStatus(siteId, session);\n          that.lastSessionId[siteId] = payload.sessionId;\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/dialog/ended': function hermodDialogEnded(topic, siteId, payload) {\n    var that = this; // console.log(['SESSION ENDED',payload]);\n\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          //if (session.termination && session.termination.reason && session.termination.reason === \"nominal\") {\n          session.success = true; //}\n\n          session.ended = true;\n          session.endtimestamp = new Date().getTime();\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/intent': function hermodIntent(topic, siteId, payload) {\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.updateSession(siteId, payload, function (session) {\n        if (session) {\n          if (!session.intents) session.intents = [];\n          session.intents.push(payload);\n          that.updateSessionStatus(siteId, session);\n        }\n\n        return session;\n      });\n      resolve();\n    });\n  },\n  'hermod/+/microphone/audio': function hermodMicrophoneAudio(topic, siteId, payload) {\n    return new Promise(function (resolve, reject) {\n      resolve();\n    });\n  }\n};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar crunker = createCommonjsModule(function (module, exports) {\n  !function (e, t) {\n    module.exports = t();\n  }(window, function () {\n    return function (e) {\n      var t = {};\n\n      function n(r) {\n        if (t[r]) return t[r].exports;\n        var o = t[r] = {\n          i: r,\n          l: !1,\n          exports: {}\n        };\n        return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n      }\n\n      return n.m = e, n.c = t, n.d = function (e, t, r) {\n        n.o(e, t) || Object.defineProperty(e, t, {\n          enumerable: !0,\n          get: r\n        });\n      }, n.r = function (e) {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }, n.t = function (e, t) {\n        if (1 & t && (e = n(e)), 8 & t) return e;\n        if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n        var r = Object.create(null);\n        if (n.r(r), Object.defineProperty(r, \"default\", {\n          enumerable: !0,\n          value: e\n        }), 2 & t && \"string\" != typeof e) for (var o in e) {\n          n.d(r, o, function (t) {\n            return e[t];\n          }.bind(null, o));\n        }\n        return r;\n      }, n.n = function (e) {\n        var t = e && e.__esModule ? function () {\n          return e.default;\n        } : function () {\n          return e;\n        };\n        return n.d(t, \"a\", t), t;\n      }, n.o = function (e, t) {\n        return Object.prototype.hasOwnProperty.call(e, t);\n      }, n.p = \"\", n(n.s = 0);\n    }([function (e, t, n) {\n      Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n\n      var r = function () {\n        function e(e, t) {\n          for (var n = 0; n < t.length; n++) {\n            var r = t[n];\n            r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n          }\n        }\n\n        return function (t, n, r) {\n          return n && e(t.prototype, n), r && e(t, r), t;\n        };\n      }();\n\n      var o = function () {\n        function e() {\n          var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).sampleRate,\n              n = void 0 === t ? 44100 : t;\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, e), this._sampleRate = n, this._context = this._createContext();\n        }\n\n        return r(e, [{\n          key: \"_createContext\",\n          value: function value() {\n            return window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext, new AudioContext();\n          }\n        }, {\n          key: \"fetchAudio\",\n          value: function () {\n            var _value = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2() {\n              var e,\n                  t,\n                  n,\n                  r,\n                  o,\n                  _args2 = arguments;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      for (e = this, t = _args2.length, n = Array(t), r = 0; r < t; r++) {\n                        n[r] = _args2[r];\n                      }\n\n                      o = n.map(\n                      /*#__PURE__*/\n                      function () {\n                        var _ref = _asyncToGenerator(\n                        /*#__PURE__*/\n                        _regeneratorRuntime.mark(function _callee(t) {\n                          var n;\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  _context.next = 2;\n                                  return fetch(t).then(function (e) {\n                                    return e.arrayBuffer();\n                                  });\n\n                                case 2:\n                                  n = _context.sent;\n                                  _context.next = 5;\n                                  return e._context.decodeAudioData(n);\n\n                                case 5:\n                                  return _context.abrupt(\"return\", _context.sent);\n\n                                case 6:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee, this);\n                        }));\n\n                        return function (_x) {\n                          return _ref.apply(this, arguments);\n                        };\n                      }());\n                      _context2.next = 4;\n                      return Promise.all(o);\n\n                    case 4:\n                      return _context2.abrupt(\"return\", _context2.sent);\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, this);\n            }));\n\n            function value() {\n              return _value.apply(this, arguments);\n            }\n\n            return value;\n          }()\n        }, {\n          key: \"mergeAudio\",\n          value: function value(e) {\n            var t = this._context.createBuffer(1, this._sampleRate * this._maxDuration(e), this._sampleRate);\n\n            return e.map(function (e) {\n              for (var n = e.getChannelData(0).length - 1; n >= 0; n--) {\n                t.getChannelData(0)[n] += e.getChannelData(0)[n];\n              }\n            }), t;\n          }\n        }, {\n          key: \"concatAudio\",\n          value: function value(e) {\n            var t = this._context.createBuffer(1, this._totalLength(e), this._sampleRate),\n                n = 0;\n\n            return e.map(function (e) {\n              t.getChannelData(0).set(e.getChannelData(0), n), n += e.length;\n            }), t;\n          }\n        }, {\n          key: \"play\",\n          value: function value(e) {\n            var t = this._context.createBufferSource();\n\n            return t.buffer = e, t.connect(this._context.destination), t.start(), t;\n          }\n        }, {\n          key: \"export\",\n          value: function value(e, t) {\n            var n = t || \"audio/mp3\",\n                r = this._interleave(e),\n                o = this._writeHeaders(r),\n                i = new Blob([o], {\n              type: n\n            });\n\n            return {\n              blob: i,\n              url: this._renderURL(i),\n              element: this._renderAudioElement(i, n)\n            };\n          }\n        }, {\n          key: \"download\",\n          value: function value(e, t) {\n            var n = t || \"crunker\",\n                r = document.createElement(\"a\");\n            return r.style = \"display: none\", r.href = this._renderURL(e), r.download = n + \".\" + e.type.split(\"/\")[1], r.click(), r;\n          }\n        }, {\n          key: \"notSupported\",\n          value: function value(e) {\n            return !this._isSupported() && e();\n          }\n        }, {\n          key: \"close\",\n          value: function value() {\n            return this._context.close(), this;\n          }\n        }, {\n          key: \"_maxDuration\",\n          value: function value(e) {\n            return Math.max.apply(Math, e.map(function (e) {\n              return e.duration;\n            }));\n          }\n        }, {\n          key: \"_totalLength\",\n          value: function value(e) {\n            return e.map(function (e) {\n              return e.length;\n            }).reduce(function (e, t) {\n              return e + t;\n            }, 0);\n          }\n        }, {\n          key: \"_isSupported\",\n          value: function value() {\n            return \"AudioContext\" in window;\n          }\n        }, {\n          key: \"_writeHeaders\",\n          value: function value(e) {\n            var t = new ArrayBuffer(44 + 2 * e.length),\n                n = new DataView(t);\n            return this._writeString(n, 0, \"RIFF\"), n.setUint32(4, 32 + 2 * e.length, !0), this._writeString(n, 8, \"WAVE\"), this._writeString(n, 12, \"fmt \"), n.setUint32(16, 16, !0), n.setUint16(20, 1, !0), n.setUint16(22, 2, !0), n.setUint32(24, this._sampleRate, !0), n.setUint32(28, 4 * this._sampleRate, !0), n.setUint16(32, 4, !0), n.setUint16(34, 16, !0), this._writeString(n, 36, \"data\"), n.setUint32(40, 2 * e.length, !0), this._floatTo16BitPCM(n, e, 44);\n          }\n        }, {\n          key: \"_floatTo16BitPCM\",\n          value: function value(e, t, n) {\n            for (var r = 0; r < t.length; r++, n += 2) {\n              var o = Math.max(-1, Math.min(1, t[r]));\n              e.setInt16(n, o < 0 ? 32768 * o : 32767 * o, !0);\n            }\n\n            return e;\n          }\n        }, {\n          key: \"_writeString\",\n          value: function value(e, t, n) {\n            for (var r = 0; r < n.length; r++) {\n              e.setUint8(t + r, n.charCodeAt(r));\n            }\n          }\n        }, {\n          key: \"_interleave\",\n          value: function value(e) {\n            for (var t = e.getChannelData(0), n = 2 * t.length, r = new Float32Array(n), o = 0, i = 0; o < n;) {\n              r[o++] = t[i], r[o++] = t[i], i++;\n            }\n\n            return r;\n          }\n        }, {\n          key: \"_renderAudioElement\",\n          value: function value(e, t) {\n            var n = document.createElement(\"audio\");\n            return n.controls = \"controls\", n.type = t, n.src = this._renderURL(e), n;\n          }\n        }, {\n          key: \"_renderURL\",\n          value: function value(e) {\n            return (window.URL || window.webkitURL).createObjectURL(e);\n          }\n        }]), e;\n      }();\n\n      t.default = o;\n    }]);\n  });\n});\nvar Crunker = unwrapExports(crunker);\nvar crunker_1 = crunker.Crunker;\n/* global window */\n\nvar HermodLogger$1 = function (_HermodMqttServer) {\n  inherits(HermodLogger, _HermodMqttServer);\n\n  function HermodLogger(props) {\n    classCallCheck(this, HermodLogger);\n\n    var _this = possibleConstructorReturn(this, (HermodLogger.__proto__ || Object.getPrototypeOf(HermodLogger)).call(this, props));\n\n    console.log('consstr hermod logger');\n    console.log(props);\n    _this.eventFunctions = eventFunctions;\n    _this.eventCallbackFunctions = _this.addCallbacks(_this.props.eventCallbackFunctions);\n    _this.siteId = props.siteId ? props.siteId : 'site' + parseInt(Math.random() * 100000000, 10);\n    _this.state = {\n      sites: {},\n      messages: [],\n      session: {},\n      audioListening: {},\n      hotwordListening: {},\n      showLogMessages: {},\n      sessionStatus: {},\n      sessionStatusText: {}\n    };\n    _this.audioBuffers = {};\n    _this.lastSessionId = {};\n    _this.getSession = _this.getSession.bind(_this);\n    _this.saveSession = _this.saveSession.bind(_this);\n    _this.updateSession = _this.updateSession.bind(_this);\n    _this.logAudioBuffer = _this.logAudioBuffer.bind(_this);\n    _this.updateSessionStatus = _this.updateSessionStatus.bind(_this);\n    _this.addCallbacks = _this.addCallbacks.bind(_this);\n    _this.findEventCallbackFunctions = _this.findEventCallbackFunctions.bind(_this);\n    _this.onMessageArrived = _this.onMessageArrived.bind(_this);\n    _this.isConnected = _this.isConnected.bind(_this);\n    _this.reset = _this.reset.bind(_this);\n    console.log(['LOGGER CONNECT', _this.siteId, _this.props]);\n\n    _this.mqttConnect.bind(_this)();\n\n    return _this;\n  }\n\n  createClass(HermodLogger, [{\n    key: 'reset',\n    value: function reset() {\n      this.setState({\n        sites: {},\n        messages: [],\n        session: {},\n        audioListening: {},\n        hotwordListening: {},\n        showLogMessages: {},\n        sessionStatus: {},\n        sessionStatusText: {}\n      });\n      this.audioBuffers = {};\n      this.lastSessionId = {};\n    }\n  }, {\n    key: 'addCallbacks',\n    value: function addCallbacks(eventCallbackFunctions) {\n      var oneOff = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      console.log(['add callbacks', eventCallbackFunctions]);\n      var that = this;\n      this.eventCallbackFunctions = Array.isArray(this.eventCallbackFunctions) ? this.eventCallbackFunctions : [];\n\n      if (eventCallbackFunctions) {\n        Object.keys(eventCallbackFunctions).map(function (key, loopKey) {\n          var value = eventCallbackFunctions[key];\n\n          if (typeof value === \"function\") {\n            // console.log(['callback',key,value]);        \n            that.eventCallbackFunctions.push({\n              subscription: key,\n              callBack: value,\n              oneOff: oneOff,\n              id: parseInt(Math.random() * 100000000, 10)\n            });\n          }\n        });\n      }\n\n      return this.eventCallbackFunctions;\n    }\n  }, {\n    key: 'findEventCallbackFunctions',\n    value: function findEventCallbackFunctions(subscriptionKey) {\n      var that = this;\n      var ret = [];\n      this.eventCallbackFunctions.map(function (value, vkey) {\n        if (that.mqttWildcard(subscriptionKey, value.subscription)) {\n          ret.push(value);\n          return;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: 'mqttWildcard',\n    value: function mqttWildcard(topic, wildcard) {\n      if (topic === wildcard) {\n        return [];\n      } else if (wildcard === '#') {\n        return [topic];\n      }\n\n      var res = [];\n      var t = String(topic).split('/');\n      var w = String(wildcard).split('/');\n      var i = 0;\n\n      for (var lt = t.length; i < lt; i++) {\n        if (w[i] === '+') {\n          res.push(t[i]);\n        } else if (w[i] === '#') {\n          res.push(t.slice(i).join('/'));\n          return res;\n        } else if (w[i] !== t[i]) {\n          return null;\n        }\n      }\n\n      if (w[i] === '#') {\n        i += 1;\n      }\n\n      return i === w.length ? res : null;\n    }\n  }, {\n    key: 'generateUuid',\n    value: function generateUuid() {\n      //// return uuid of form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\n      var uuid = '',\n          ii;\n\n      for (ii = 0; ii < 32; ii += 1) {\n        switch (ii) {\n          case 8:\n          case 20:\n            uuid += '-';\n            uuid += (Math.random() * 16 | 0).toString(16);\n            break;\n\n          case 12:\n            uuid += '-';\n            uuid += '4';\n            break;\n\n          case 16:\n            uuid += '-';\n            uuid += (Math.random() * 4 | 8).toString(16);\n            break;\n\n          default:\n            uuid += (Math.random() * 16 | 0).toString(16);\n        }\n      }\n\n      return uuid;\n    }\n  }, {\n    key: 'onMessageArrived',\n    value: function onMessageArrived(topic, message) {\n      console.log(['ONMESSAGEARRIVED', topic, message]);\n      message.destinationName = topic;\n      message.payloadBytes = message;\n      message.payloadString = String(message);\n      var that = this;\n      var parts = message.destinationName ? message.destinationName.split(\"/\") : [];\n\n      if (parts.length > 1 && parts[0] === \"hermod\") {\n        var runServiceCallbacks = function runServiceCallbacks(functionKey) {\n          var callbacks = that.findEventCallbackFunctions(functionKey);\n\n          if (callbacks) {\n            callbacks.map(function (value, ckey) {\n              value.callBack.bind(that)(message.destinationName, siteId, _payload);\n            });\n          }\n        }; // logging callbacks\n\n\n        var siteId = parts[1];\n        var _payload = {}; // special handling where the payload is audio\n\n        if (parts.length > 3 && (parts[2] === \"speaker\" && parts[3] === \"play\" || parts[2] === \"microphone\" && parts[3] === \"audio\")) {\n          var audio = message.payloadBytes;\n          var _session = null;\n\n          if (parts[2] === \"microphone\") {\n            this.appendAudioBuffer(siteId, audio);\n          } //// Non Audio Messages parse JSON body\n\n        } else {\n          console.log(['amessage', message.destinationName, this.state]);\n\n          try {\n            _payload = JSON.parse(message.payloadString);\n          } catch (e) {} // log plain flat messages\n\n\n          var messages = this.state.messages;\n          var thisState = this.getSession(siteId, _payload.id);\n          if (!thisState) thisState = {};\n          if (_payload.id) this.lastSessionId[siteId] = _payload.id;\n          messages.push({\n            id: thisState.id,\n            payload: React.createElement('div', {\n              style: {\n                backgroundColor: 'lightgrey'\n              }\n            }, React.createElement('hr', null), React.createElement('div', {\n              style: {\n                backgroundColor: 'lightblue'\n              }\n            }, React.createElement('pre', null, JSON.stringify(_payload, undefined, 4))), React.createElement('hr', null), React.createElement('div', {\n              style: {\n                backgroundColor: 'lightgreen'\n              }\n            }, React.createElement('pre', null, JSON.stringify(thisState, undefined, 4))), React.createElement('hr', null)),\n            text: message.destinationName\n          });\n          this.setState({\n            messages: messages\n          });\n          console.log(['logged messages', messages]);\n        }\n\n        if (!_payload) _payload = {};\n        var functionKey = message.destinationName; //console.log(['payload ',payload,this.eventFunctions,functionKey]);\n\n        var _session = that.getSession(siteId, _payload ? _payload.id : null);\n\n        var matchingEventFunction = null;\n\n        for (var i in this.eventFunctions) {\n          if (this.mqttWildcard(functionKey, i)) {\n            matchingEventFunction = this.eventFunctions[i];\n            break;\n          }\n        }\n\n        if (matchingEventFunction) {\n          var p = matchingEventFunction.bind(that)(message.destinationName, siteId, _payload);\n          p.then(function (session) {\n            runServiceCallbacks(functionKey);\n          }).catch(function (e) {\n            console.log(e);\n          });\n        } else {\n          runServiceCallbacks(functionKey);\n        }\n      }\n    }\n  }, {\n    key: 'cleanSlots',\n    value: function cleanSlots(slots) {\n      var final = {};\n\n      if (slots) {\n        slots.map(function (slot) {\n          final[slot.slotName] = {\n            type: slot.value.kind,\n            value: slot.value.value\n          };\n          return;\n        });\n      }\n\n      return final;\n    }\n  }, {\n    key: 'getSession',\n\n    /** \n     * Get a session for a given siteId and sessionId\n     * \n     */\n    //  that.lastSessionId[payload.siteId]\n    value: function getSession(siteIdIn, sessionIdIn) {\n      // console.log(['getSession(',siteIdIn,sessionIdIn])\n      var siteId = null;\n      var sessionId = null;\n      var that = this;\n\n      function findOrCreateSession(siteId, sessionId) {\n        sessionId = String(sessionId); // console.log(['findOrCreateSession',siteId,sessionId])\n\n        if (siteId && siteId.length > 0 && sessionId && sessionId.length > 0) {\n          if (that.state.sites && that.state.sites.hasOwnProperty(siteId) && that.state.sites[siteId].hasOwnProperty(sessionId) && that.state.sites[siteId][sessionId]) {\n            return that.state.sites[siteId][sessionId];\n          } else {\n            // fallback, create a new session\n            var sites = that.state.sites ? that.state.sites : {};\n            var sessions = that.state.sessions ? that.state.sessions : {};\n            if (!sites.hasOwnProperty(siteId)) sites[siteId] = {};\n            var newSession = {\n              createtimestamp: new Date().getTime(),\n              siteId: siteId,\n              id: sessionId\n            };\n            if (!sites[siteId].hasOwnProperty(sessionId)) sites[siteId][sessionId] = newSession;\n            sessions[sessionId] = siteId;\n            that.setState({\n              sites: sites,\n              sessions: sessions\n            });\n            return sites[siteId][sessionId];\n          }\n        } else {\n          console.log(['CANNOT FIND OR CREATE SESSION MISSING SITE ID', siteId, sessionId]);\n          return null;\n        }\n      }\n\n      if (siteIdIn && siteIdIn.length > 0) {\n        if (sessionIdIn && sessionIdIn.length > 0) {\n          // have site and session id\n          siteId = siteIdIn;\n          sessionId = sessionIdIn;\n          return findOrCreateSession(siteId, sessionId);\n        } else {\n          // have siteId\n          siteId = siteIdIn;\n          sessionId = this.lastSessionId[siteId]; //console.log(['session id from lastSessionId',this.lastSessionId,siteId])\n\n          return findOrCreateSession(siteId, sessionId);\n        }\n      } else {\n        console.log('MISSING SITE ID IN LOGGER');\n      }\n    }\n  }, {\n    key: 'updateSession',\n\n    /**\n     *  Lookup session, use callback to make changes and restore session to state\n     */\n    value: function updateSession(siteId, payload, callback) {\n      var sessionId = payload && payload.id && payload.id.length > 0 ? payload.id : null;\n      var session = this.getSession(siteId, sessionId);\n\n      if (session) {\n        var result = callback(session);\n        this.saveSession(session.siteId, session.id, result);\n      }\n    }\n  }, {\n    key: 'saveSession',\n    value: function saveSession(siteId, sessionIdIn, session) {\n      var sessionId = sessionIdIn && sessionIdIn.length > 0 ? sessionIdIn : 'unknownSession'; // ensure siteId\n      //let siteId=siteIdIn;\n      //if (!siteIdIn ||siteIdIn.length === 0) {\n      //siteId = this.state.sessions[sessionId];\n      //}        \n\n      if (siteId && siteId.length > 0) {\n        var sites = this.state.sites;\n        sites[siteId][sessionId] = session;\n        this.setState({\n          sites: sites\n        });\n        this.setLogData();\n      }\n    }\n  }, {\n    key: 'setLogData',\n    // push log data up to parent component\n    value: function setLogData() {\n      if (this.props.setLogData) this.props.setLogData(this.state.sites, this.state.messages, this.state.sessionStatus, this.state.sessionStatusText, this.state.hotwordListening, this.state.audioListening);\n    }\n  }, {\n    key: 'updateSessionStatus',\n    value: function updateSessionStatus(siteKey, session) {\n      var that = this;\n      var sessionStatus = 0;\n      var sessionKey = session.sessionId;\n      if (that.state.hotwordListening[siteKey]) sessionStatus = 1;\n      if (that.state.audioListening[siteKey]) sessionStatus = 2;\n      if (session.queued) sessionStatus = 3;\n      if (session.started) sessionStatus = 4;\n      if (session.intents && session.asr && session.intents.length < session.asr.length) sessionStatus = 5;\n      if (session.intents && session.asr && session.intents.length === session.asr.length) sessionStatus = 6;\n      if (session.ended) sessionStatus = 7;\n      if (session.success) sessionStatus = 8;\n      var statusTexts = ['starting', 'hotword', 'listening', 'queued', 'started', 'transcribed', 'interpreted', 'ended', 'success'];\n      var statusText = statusTexts[sessionStatus];\n      var allSessionsStatus = that.state.sessionStatus;\n      var allSessionsStatusText = that.state.sessionStatusText;\n      allSessionsStatus[sessionKey] = sessionStatus;\n      allSessionsStatusText[sessionKey] = statusText;\n      that.setState({\n        sessionStatus: allSessionsStatus,\n        sessionStatusText: allSessionsStatusText\n      });\n    }\n  }, {\n    key: 'getAudioBuffer',\n\n    /**\n     * Get or create an audio buffer for the siteId\n     */\n    value: function getAudioBuffer(siteId) {\n      if (siteId) {\n        if (this.audioBuffers.hasOwnProperty(siteId)) {\n          return this.audioBuffers[siteId];\n        } else {\n          this.audioBuffers[siteId] = [];\n          return this.audioBuffers[siteId];\n        }\n      }\n    }\n  }, {\n    key: 'appendAudioBuffer',\n\n    /**\n     * Get or create an audio buffer for the siteId\n     */\n    value: function appendAudioBuffer(siteId, buffer) {\n      if (this.props.logAudio === true && siteId) {\n        if (this.state.audioListening[siteId]) {\n          var currentBuffer = this.getAudioBuffer(siteId);\n          currentBuffer.push(buffer);\n        }\n      }\n    }\n  }, {\n    key: 'resetAudioBuffer',\n\n    /**\n     * Get or create an audio buffer for the siteId\n     */\n    value: function resetAudioBuffer(siteId) {\n      this.audioBuffers[siteId] = [];\n    }\n  }, {\n    key: 'logAudioBuffer',\n    value: function logAudioBuffer(payload) {\n      var that = this;\n      var promises = [];\n      var siteId = payload.siteId;\n\n      if (this.props.logAudio === true) {\n        try {\n          // save to sites/sessions\n          var audioContext = window.AudioContext || window.webkitAudioContext;\n          var context = new audioContext();\n          var audioBuffer = this.getAudioBuffer(siteId); // memory overload protection\n          // if (audioBuffer.length> 350) return;\n\n          audioBuffer.map(function (bytes, key) {\n            var p = new Promise(function (resolve, reject) {\n              if (bytes && bytes.length > 0) {\n                var buffer = new Uint8Array(bytes.length);\n                buffer.set(new Uint8Array(bytes), 0);\n\n                try {\n                  context.decodeAudioData(buffer.buffer, function (audioBuffer) {\n                    resolve(audioBuffer);\n                  });\n                } catch (e) {\n                  // trash buffer\n                  reject();\n                }\n              }\n            });\n            promises.push(p);\n            return;\n          });\n        } catch (e) {\n          console.log(['ERROR', e]);\n        }\n\n        Promise.all(promises).then(function (allBuffers) {\n          var merger = new Crunker();\n\n          try {\n            var output = merger.export(merger.concatAudio(allBuffers), \"audio/wav\");\n            that.updateSession(siteId, payload, function (session) {\n              if (!session.audio) session.audio = [];\n              that.blobToDataUrl(output.blob).then(function (dataUrl) {\n                session.audio.push(dataUrl); // start again\n\n                that.resetAudioBuffer(siteId);\n                that.setLogData();\n              });\n              return session;\n            });\n          } catch (e) {\n            console.log(e.message);\n          }\n        });\n      }\n    }\n  }, {\n    key: 'blobToDataUrl',\n    value: function blobToDataUrl(blob) {\n      return new Promise(function (fulfill, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n\n        reader.onload = function (e) {\n          return fulfill(reader.result);\n        };\n\n        reader.readAsDataURL(blob);\n      });\n    }\n  }, {\n    key: 'sendMqtt',\n    value: function sendMqtt(destination, payload) {\n      console.log(['SEND MQTT', this.state.connected, destination, payload]); //if (!destination.startsWith('hermod/audioServer')) console.log(['SESSION SEND MQTT LOGGER',destination,payload])\n\n      if (this.state.connected) {\n        //let message = new Paho.MQTT.Message(JSON.stringify(payload));\n        //message.destinationName = destination;\n        this.mqttClient.publish(destination, JSON.stringify(payload));\n      }\n    }\n  }, {\n    key: 'sendAudioMqtt',\n    value: function sendAudioMqtt(destination, payload) {\n      if (this.state.connected) {\n        this.mqttClient.publish(destination, payload); //let message = new Paho.MQTT.Message(payload);\n        //message.destinationName = destination;\n        //this.mqttClient.send(message);\n      }\n    }\n  }, {\n    key: 'say',\n\n    /**\n     * Send Mqtt message to speak text\n     */\n    value: function say(siteId, text) {\n      var that = this;\n      console.log(['SAY', this.state.connected, destination, payload]);\n\n      if (that.state && that.state.connected) {\n        var _payload2 = {\n          text: text\n        };\n        this.mqttClient.publish('hermod/' + siteId + '/tts/say', JSON.stringify(_payload2)); //let message = new Paho.MQTT.Message(JSON.stringify(payload));\n        //message.destinationName = \"hermod/tts/say\";\n        //that.mqttClient.send(message);\n      }\n    }\n  }, {\n    key: 'isConnected',\n    value: function isConnected() {\n      return this.state.connected;\n    }\n  }]);\n  return HermodLogger;\n}(HermodMqttServer);\n\nvar HermodReactComponent = function (_Component) {\n  inherits(HermodReactComponent, _Component);\n\n  function HermodReactComponent(props) {\n    classCallCheck(this, HermodReactComponent);\n\n    var _this = possibleConstructorReturn(this, (HermodReactComponent.__proto__ || Object.getPrototypeOf(HermodReactComponent)).call(this, props));\n\n    _this.props = props;\n    _this.state = {};\n    _this.logger = null;\n    _this.queueOneOffCallbacks = _this.queueOneOffCallbacks.bind(_this);\n    _this.connectToLogger = _this.connectToLogger.bind(_this);\n    return _this;\n  }\n\n  createClass(HermodReactComponent, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.connectToLogger(this.props.logger, {});\n    }\n  }, {\n    key: 'connectToLogger',\n    value: function connectToLogger(logger, eventFunctions) {\n      if (logger) {\n        logger.addCallbacks(eventFunctions);\n        this.logger = logger;\n        return this.logger;\n      } else {\n        this.logger = new HermodLogger$1(Object.assign({\n          logAudio: false,\n          setLogData: this.setLogData,\n          eventCallbackFunctions: eventFunctions\n        }, this.props));\n        return this.logger;\n      }\n    }\n  }, {\n    key: 'queueOneOffCallbacks',\n    value: function queueOneOffCallbacks(eventFunctions) {\n      if (this.logger) {\n        this.logger.addCallbacks(eventFunctions, true);\n      }\n    }\n  }, {\n    key: 'sendMqtt',\n    value: function sendMqtt(destination, payload) {\n      if (this.logger) {\n        this.logger.sendMqtt(destination, payload);\n      }\n    }\n  }, {\n    key: 'setLogData',\n    // force update\n    value: function setLogData(sites, messages, sessionStatus, sessionStatusText, hotwordListening, audioListening) {\n      this.setState(this.state);\n    }\n  }, {\n    key: 'sendHotwordToggleOn',\n\n    /**\n     *  MQTT SEND \n     */\n\n    /**\n     * Send Mqtt message to toggle on hotword\n     * Used to forcibly initialise the local hotword server.\n     */\n    value: function sendHotwordToggleOn(siteId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/hotword/start\", {});\n    }\n  }, {\n    key: 'sendHotwordDetected',\n\n    /**\n     * Send Mqtt message to fake hotword detection\n     */\n    value: function sendHotwordDetected(siteId, hotwordId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/hotword/detected\", {\n        hotword: hotwordId\n      });\n    }\n    /**\n     * Send Mqtt message to start a voice session\n     */\n\n  }, {\n    key: 'sendStartSession',\n    value: function sendStartSession(siteId, customData, text) {\n      var payload = {};\n      if (customData) payload.customData = JSON.stringify(customData);\n      this.sendMqtt(\"hermod/\" + siteId + \"/dialog/start\", payload);\n    }\n  }, {\n    key: 'sendSayFinished',\n\n    /**\n     * Send Mqtt message to indicate that tts has finished\n     */\n    value: function sendSayFinished(id, sessionId) {\n      this.sendMqtt(\"hermod/\" + this.siteId + \"/tts/finished\", {\n        id: id,\n        sessionId: sessionId\n      });\n    }\n  }, {\n    key: 'sendPlayFinished',\n\n    /**\n     * Send Mqtt message to indicate audioserver playback has finished\n     */\n    value: function sendPlayFinished(siteId, sessionId) {\n      this.sendMqtt(\"hermod/\" + this.siteId + \"/speaker/finished\", {\n        id: sessionId\n      });\n    }\n  }, {\n    key: 'sendEndSession',\n\n    /**\n     * Send Mqtt message to end the session immediately\n     */\n    value: function sendEndSession(siteId, sessionId, text) {\n      console.log(['send end sess', siteId, sessionId, text]);\n      var payload = {\n        id: sessionId\n      };\n\n      if (text && text.length > 0) {\n        payload.text = text;\n      }\n\n      this.sendMqtt(\"hermod/\" + siteId + \"/dialog/end\", payload);\n    }\n  }, {\n    key: 'sendAsrToggleOn',\n\n    /**\n      * Send Mqtt message to toggle on asr\n      * Used to forcibly initialise the local asr server.\n      */\n    value: function sendAsrToggleOn(siteId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/asr/start\", {});\n    }\n  }, {\n    key: 'sendAsrStopListening',\n\n    /**\n     * Send Mqtt message to toggle on asr\n     * Used to forcibly initialise the local asr server.\n     */\n    value: function sendAsrStopListening(siteId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/asr/stop\", {\n        siteId: siteId\n      });\n    }\n  }, {\n    key: 'sendAsrStartListening',\n\n    /**\n     * Send Mqtt message to toggle on asr\n     * Used to forcibly initialise the local asr server.\n     */\n    value: function sendAsrStartListening(siteId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/asr/start\", {});\n    }\n  }, {\n    key: 'sendAsrToggleOff',\n\n    /**\n    * Send Mqtt message to toggle on asr\n    * Used to forcibly initialise the local asr server.\n    */\n    value: function sendAsrToggleOff(siteId) {\n      this.sendMqtt(\"hermod/\" + siteId + \"/asr/stop\", {});\n    }\n  }, {\n    key: 'sendFeedbackToggleOn',\n\n    /**\n    * Send Mqtt message to toggle on feedback\n    */\n    value: function sendFeedbackToggleOn(siteId) {//  this.sendMqtt(\"hermod/feedback/sound/toggleOn\",{siteId:siteId});\n    }\n  }, {\n    key: 'sendFeedbackToggleOff',\n\n    /**\n    * Send Mqtt message to toggle off feedback\n    */\n    value: function sendFeedbackToggleOff(siteId) {//  this.sendMqtt(\"hermod/feedback/sound/toggleOff\",{siteId:siteId});\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('b', {\n        id: 'Hermodreactcomponent'\n      });\n    }\n  }]);\n  return HermodReactComponent;\n}(Component); //let hark = require('hark');\n\n\nvar HermodReactMicrophone = function (_HermodReactComponent) {\n  inherits(HermodReactMicrophone, _HermodReactComponent);\n\n  function HermodReactMicrophone(props) {\n    classCallCheck(this, HermodReactMicrophone);\n\n    var _this = possibleConstructorReturn(this, (HermodReactMicrophone.__proto__ || Object.getPrototypeOf(HermodReactMicrophone)).call(this, props));\n\n    _this.startRecording = function () {\n      console.log('start recording');\n      this.setState({\n        lastIntent: '',\n        lastTts: '',\n        lastTranscript: '',\n        showMessage: false\n      });\n      this.sendStartSession(this.siteId, {\n        startedBy: 'Hermodreactmicrophone',\n        user: this.props.user ? this.props.user._id : ''\n      });\n    };\n\n    _this.stopRecording = function () {\n      console.log(['stop rec', this.logger]);\n      var session = this.logger.getSession(this.siteId, null);\n      console.log(session ? session : 'no session');\n      if (session) this.sendEndSession(session.siteId, session.id);\n    };\n\n    var that = _this;\n    _this.state = {};\n\n    if (!props.siteId || props.siteId.length === 0) {\n      throw \"Hermod Microphone must be configured with a siteId property\";\n    }\n\n    _this.state = {\n      recording: false,\n      messages: [],\n      lastIntent: '',\n      lastTts: '',\n      lastTranscript: '',\n      showMessage: false,\n      activated: false,\n      speaking: false,\n      showConfig: false,\n      listening: false,\n      sessionId: \"\"\n    };\n    _this.siteId = props.siteId; //? props.siteId : 'browser'+parseInt(Math.random()*100000000,10);\n\n    _this.clientId = props.clientId ? props.clientId : 'client' + parseInt(Math.random() * 100000000, 10);\n    _this.hotwordId = props.hotwordId ? props.hotwordId : 'default';\n    _this.context = null;\n    _this.gainNode = null;\n    _this.messageTimeout = null;\n    _this.speakingTimeout = null;\n    _this.speechEvents = null;\n    _this.startRecording = _this.startRecording.bind(_this);\n    _this.stopRecording = _this.stopRecording.bind(_this);\n    _this.startRecorder = _this.startRecorder.bind(_this);\n    _this.sendAudioBuffer = _this.sendAudioBuffer.bind(_this);\n    _this.audioBufferToWav = _this.audioBufferToWav.bind(_this);\n    _this.reSample = _this.reSample.bind(_this);\n    _this.encodeWAV = _this.encodeWAV.bind(_this);\n    _this.interleave = _this.interleave.bind(_this);\n    _this.flashState = _this.flashState.bind(_this);\n    _this.activate = _this.activate.bind(_this);\n    _this.deactivate = _this.deactivate.bind(_this);\n    _this.showConfig = _this.showConfig.bind(_this);\n    _this.showConfigNow = _this.showConfigNow.bind(_this);\n    _this.clearConfigTimer = _this.clearConfigTimer.bind(_this);\n    _this.waitingForSession = null;\n    _this.configTimeout = null;\n    var eventFunctions = {\n      // SESSION\n      'hermod/+/asr/text': function hermodAsrText(topic, siteId, payload) {\n        // && payload.siteId === that.siteId\n        if (siteId && siteId.length > 0 && payload.text && payload.text.length > 0) {\n          that.flashState('lastTranscript', payload.text);\n        }\n      },\n      'hermod/+/tts/say': function hermodTtsSay(topic, siteId, payload) {\n        if (siteId && siteId.length > 0 && payload.text && payload.text.length > 0) {\n          that.flashState('lastTts', payload.text);\n        }\n      },\n      'hermod/+/microphone/start': function hermodMicrophoneStart(topic, siteId, payload) {\n        if (siteId && siteId.length > 0) {\n          that.setState({\n            sending: true\n          });\n        }\n      },\n      'hermod/+/microphone/stop': function hermodMicrophoneStop(topic, siteId, payload) {\n        if (siteId && siteId.length > 0) {\n          that.setState({\n            sending: false\n          });\n        }\n      } //  console.log(['MIC CONNECT EVENTS',props.siteId]);\n\n    };\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    return _this;\n  }\n  /**\n   * Lifecycle functions\n   */\n\n  /**\n   * Activate on mount if user has previously enabled.\n   */\n\n\n  createClass(HermodReactMicrophone, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.startRecorder(); // FORCE START ASR ON THIS SITE BY TOGGLE ON SESSION, WAIT, THEN END SESSION AND RESET LOGS\n      //that.queueOneOffCallbacks({\n      //'hermod/+/dialog/started' : function(topic,siteId,payload) {\n      //if (siteId && siteId.length > 0) { // && payload.siteId === that.siteId ) {\n      //// clear log\n      ////that.queueOneOffCallbacks({\n      ////'hermod/feedback/sound/toggleOn' : function(payload) {\n      ////if (payload.siteId && payload.siteId.length > 0 && payload.siteId === that.siteId ) {\n      ////that.logger.reset();\n      ////}\n      ////}\n      ////});\n      //setTimeout(function() {\n      //that.sendEndSession(siteId,payload.id);\n      ////that.sendFeedbackToggleOn(that.props.siteId);\n      //},500);\n      //}\n      //}\n      //});\n      //setTimeout(function() {\n      ////that.sendFeedbackToggleOff(that.props.siteId);\n      ////   that.sendStartSession(that.props.siteId);\n      //},900);\n    }\n    /** \n     * Functions to enable and disable configuration screen \n     * by default using a debounce to implement click and hold to enable config\n     **/\n\n  }, {\n    key: 'showConfig',\n    value: function showConfig(e) {\n      console.log('show config');\n      var that = this;\n      this.configTimeout = setTimeout(function () {\n        console.log('show now'); //that.setState({showConfig:true}); \n\n        if (that.props.showConfig) that.props.showConfig();else that.deactivate();\n      }, 1000);\n    }\n  }, {\n    key: 'showConfigNow',\n    value: function showConfigNow(e) {\n      console.log('show config now');\n      e.preventDefault();\n      e.stopPropagation(); //this.setState({showConfig:true});\n\n      if (this.props.showConfig) this.props.showConfig();else this.deactivate();\n    }\n  }, {\n    key: 'clearConfigTimer',\n    value: function clearConfigTimer() {\n      if (this.configTimeout) clearTimeout(this.configTimeout);\n    }\n  }, {\n    key: 'activate',\n\n    /**\n     * Connect to mqtt, start the recorder and optionally start listening\n     * Triggered by microphone click or hotword when the mic is deactivated\n     */\n    value: function activate() {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      console.log('activate');\n      var that = this;\n      localStorage.setItem(this.appendUserId('Hermodmicrophone_enabled', this.props.user), 'true');\n\n      if (start) {\n        setTimeout(function () {\n          that.startRecording();\n        }, 500);\n      }\n\n      that.setState({\n        activated: true,\n        sending: false\n      });\n    }\n    /**\n     * Enable streaming of the audio input stream\n     */\n\n  }, {\n    key: 'deactivate',\n\n    /**\n     * Disable microphone and listeners\n     */\n    value: function deactivate() {\n      console.log('deactivate');\n      localStorage.setItem(this.appendUserId('Hermodmicrophone_enabled', this.props.user), 'false');\n      this.setState({\n        activated: false,\n        sending: false\n      });\n    }\n  }, {\n    key: 'startRecorder',\n\n    /**\n    * Access the microphone and start streaming mqtt packets\n    */\n    value: function startRecorder() {\n      var that = this;\n\n      if (!navigator.getUserMedia) {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      }\n\n      try {\n        if (navigator.getUserMedia) {\n          navigator.getUserMedia({\n            audio: true\n          }, success, function (e) {\n            console.log(['MIC Error capturing audio.', e]);\n          });\n        } else {\n          console.log('MIC getUserMedia not supported in this browser.');\n        }\n      } catch (e) {\n        console.log(e);\n      }\n\n      function success(e) {\n        console.log('got navigator');\n        var audioContext = window.AudioContext || window.webkitAudioContext;\n        var context = new audioContext();\n        that.setState({\n          'activated': true\n        });\n        that.gainNode = context.createGain(); // initial set volume\n\n        that.gainNode.gain.value = that.props.config.inputvolume > 0 ? that.props.config.inputvolume / 100 : 0.5;\n        var audioInput = context.createMediaStreamSource(e);\n        var bufferSize = 256;\n        var recorder = context.createScriptProcessor(bufferSize, 1, 1);\n\n        recorder.onaudioprocess = function (e) {\n          //!that.logger.connected || \n          if (!that.state.sending) return;\n          var left = e.inputBuffer.getChannelData(0);\n          that.sendAudioBuffer(e.inputBuffer, context.sampleRate); //console.log('MIC send audio'); //,buffer,that.audioBuffer]);\n        };\n\n        if (that.props.addInputGainNode) that.props.addInputGainNode(that.gainNode);\n        audioInput.connect(that.gainNode);\n        that.gainNode.connect(recorder);\n        recorder.connect(context.destination);\n      }\n    }\n  }, {\n    key: 'addInputGainNode',\n    value: function addInputGainNode(node) {\n      this.inputGainNodes.push(node);\n    }\n  }, {\n    key: 'appendUserId',\n    value: function appendUserId(text, user) {\n      if (user && user._id) {\n        return text + \"_\" + user._id;\n      } else {\n        return text;\n      }\n    }\n  }, {\n    key: 'flashState',\n    ///**\n    //* Bind silence recognition events to set speaking state\n    //*/ \n    //bindSpeakingEvents(audioContext,e) {\n    //// console.log(['bindSpeakingEvents'])\n    //let that = this;\n    //var options = {audioContext:audioContext};\n    //options.threshhold = this.getThreshholdFromVolume(this.state.config.silencesensitivity);\n    //// bind speaking events care of hark\n    //this.speechEvents = hark(e, options);\n    //this.speechEvents.on('speaking', function() {\n    //if (that.state.config.silencedetection !== \"no\") {\n    ////console.log('speaking');\n    //if (that.speakingTimeout) clearTimeout(that.speakingTimeout);\n    //that.setState({speaking:true});\n    //}\n    //});\n    //this.speechEvents.on('stopped_speaking', function() {\n    //if (that.state.config.silencedetection !== \"no\") {\n    //if (that.speakingTimeout) clearTimeout(that.speakingTimeout);\n    //that.speakingTimeout = setTimeout(function() {\n    //// console.log('stop speaking');\n    //that.setState({speaking:false});\n    //},1000);\n    //}\n    //});            \n    //};\n    //getThreshholdFromVolume(volume) {\n    //return 10 * Math.log((101 - volume )/800);\n    //};\n    value: function flashState(key, value) {\n      var that = this;\n\n      if (this.props.config.enablenotifications !== \"no\") {\n        if (key && key.length > 0 && value && value.length > 0) {\n          if (this.messageTimeOut) clearTimeout(this.messageTimeOut);\n          var newObj = {\n            showMessage: true\n          };\n\n          if (key === \"lastTranscript\") {\n            newObj.lastIntent = '';\n            newObj.lastTts = '';\n          }\n\n          newObj[key] = value;\n          this.setState(newObj);\n          setTimeout(function () {\n            that.setState({\n              showMessage: false\n            });\n          }, that.props.messageTimeout > 0 ? that.props.messageTimeout : 10000);\n        }\n      }\n    }\n  }, {\n    key: 'sendAudioBuffer',\n\n    /** WAV encoding functions */\n    value: function sendAudioBuffer(buffer, sampleRate) {\n      var that = this;\n\n      if (buffer) {\n        this.reSample(buffer, 16000, function (result) {\n          var wav = that.audioBufferToWav(result);\n          that.logger.sendAudioMqtt(\"hermod/\" + that.siteId + \"/microphone/audio\", wav);\n        }, sampleRate);\n      }\n    }\n  }, {\n    key: 'convertFloat32ToInt16',\n    value: function convertFloat32ToInt16(buffer) {\n      var l = buffer.length;\n      var buf = new Int16Array(l);\n\n      while (l--) {\n        buf[l] = Math.min(1, buffer[l]) * 0x7FFF;\n      }\n\n      return buf.buffer;\n    }\n  }, {\n    key: 'flattenArray',\n    value: function flattenArray(inChannelBuffer, recordingLength) {\n      var channelBuffer = this.convertFloat32ToInt16(inChannelBuffer);\n      var result = new Float32Array(recordingLength);\n      var offset = 0;\n\n      for (var i = 0; i < channelBuffer.length; i++) {\n        var buffer = channelBuffer[i];\n        result.set(buffer, offset);\n        offset += buffer.length;\n      }\n\n      return result;\n    }\n  }, {\n    key: 'reSample',\n    value: function reSample(audioBuffer, targetSampleRate, onComplete, sampleRateContext) {\n      var sampleRate = !isNaN(sampleRateContext) ? sampleRateContext : 44100;\n      var channel = audioBuffer && audioBuffer.numberOfChannels ? audioBuffer.numberOfChannels : 1;\n      var samples = audioBuffer.length * targetSampleRate / sampleRate;\n      var offlineContext = new OfflineAudioContext(channel, samples, targetSampleRate);\n      var bufferSource = offlineContext.createBufferSource();\n      bufferSource.buffer = audioBuffer;\n      bufferSource.connect(offlineContext.destination);\n      bufferSource.start(0);\n      offlineContext.startRendering().then(function (renderedBuffer) {\n        onComplete(renderedBuffer);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  }, {\n    key: 'audioBufferToWav',\n    value: function audioBufferToWav(buffer, opt) {\n      opt = opt || {};\n      var numChannels = buffer.numberOfChannels;\n      var sampleRate = buffer.sampleRate;\n      var format = opt.float32 ? 3 : 1;\n      var bitDepth = format === 3 ? 32 : 16;\n      var result;\n\n      if (numChannels === 2) {\n        result = this.interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n      } else {\n        result = buffer.getChannelData(0);\n      }\n\n      return this.encodeWAV(result, format, sampleRate, numChannels, bitDepth);\n    }\n  }, {\n    key: 'encodeWAV',\n    value: function encodeWAV(samples, format, sampleRate, numChannels, bitDepth) {\n      var bytesPerSample = bitDepth / 8;\n      var blockAlign = numChannels * bytesPerSample;\n      var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n      var view = new DataView(buffer);\n      /* RIFF identifier */\n\n      this.writeString(view, 0, 'RIFF');\n      /* RIFF chunk length */\n\n      view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n      /* RIFF type */\n\n      this.writeString(view, 8, 'WAVE');\n      /* format chunk identifier */\n\n      this.writeString(view, 12, 'fmt ');\n      /* format chunk length */\n\n      view.setUint32(16, 16, true);\n      /* sample format (raw) */\n\n      view.setUint16(20, format, true);\n      /* channel count */\n\n      view.setUint16(22, numChannels, true);\n      /* sample rate */\n\n      view.setUint32(24, sampleRate, true);\n      /* byte rate (sample rate * block align) */\n\n      view.setUint32(28, sampleRate * blockAlign, true);\n      /* block align (channel count * bytes per sample) */\n\n      view.setUint16(32, blockAlign, true);\n      /* bits per sample */\n\n      view.setUint16(34, bitDepth, true);\n      /* data chunk identifier */\n\n      this.writeString(view, 36, 'data');\n      /* data chunk length */\n\n      view.setUint32(40, samples.length * bytesPerSample, true);\n\n      if (format === 1) {\n        // Raw PCM\n        this.floatTo16BitPCM(view, 44, samples);\n      } else {\n        this.writeFloat32(view, 44, samples);\n      }\n\n      return buffer;\n    }\n  }, {\n    key: 'interleave',\n    value: function interleave(inputL, inputR) {\n      var length = inputL.length + inputR.length;\n      var result = new Float32Array(length);\n      var index = 0;\n      var inputIndex = 0;\n\n      while (index < length) {\n        result[index++] = inputL[inputIndex];\n        result[index++] = inputR[inputIndex];\n        inputIndex++;\n      }\n\n      return result;\n    }\n  }, {\n    key: 'writeFloat32',\n    value: function writeFloat32(output, offset, input) {\n      for (var i = 0; i < input.length; i++, offset += 4) {\n        output.setFloat32(offset, input[i], true);\n      }\n    }\n  }, {\n    key: 'floatTo16BitPCM',\n    value: function floatTo16BitPCM(output, offset, input) {\n      for (var i = 0; i < input.length; i++, offset += 2) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n      }\n    }\n  }, {\n    key: 'writeString',\n    value: function writeString(view, offset, string) {\n      for (var i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var text = this.props.text;\n      var buttonStyle = this.props.buttonStyle ? this.props.buttonStyle : {};\n      var size = this.props.size && this.props.size.length > 0 ? this.props.size : '2em';\n      buttonStyle.width = size;\n      buttonStyle.height = size;\n      var position = this.props.position && this.props.position.length > 0 ? this.props.position : 'topright'; // set mic position and override bubble position\n\n      buttonStyle.position = 'fixed';\n\n      if (position === \"topleft\") {\n        buttonStyle.top = 0;\n        buttonStyle.left = 0;\n      } else if (position === \"topright\") {\n        buttonStyle.top = 0;\n        buttonStyle.right = 0;\n      } else if (position === \"bottomleft\") {\n        buttonStyle.bottom = 0;\n        buttonStyle.left = 0;\n      } else if (position === \"bottomright\") {\n        buttonStyle.bottom = 0;\n        buttonStyle.right = 0;\n      }\n\n      var status = 0;\n      if (this.state.activated) status = 2; //if (this.state.connected) status = 2;\n\n      if (this.state.sending) status = 3; //if (this.state.sending) status = 3;\n      // console.log(status);\n\n      var borderColor = 'black';\n      var borderWidth = 2;\n\n      if (status == 3) {\n        borderColor = this.state.speaking ? 'darkgreen' : this.props.borderColor ? this.props.borderColor : 'green';\n        buttonStyle.backgroundColor = 'lightgreen';\n        if (this.state.speaking) borderWidth = 3;\n      } else if (status == 1) {\n        borderColor = this.state.speaking ? 'darkorange' : this.props.borderColor ? this.props.borderColor : 'orange';\n        buttonStyle.backgroundColor = 'lightorange';\n        if (this.state.speaking) borderWidth = 3;\n      } else if (status == 2) {\n        borderColor = this.state.speaking ? 'orangered' : this.props.borderColor ? this.props.borderColor : 'red';\n        buttonStyle.backgroundColor = 'pink';\n        if (this.state.speaking) borderWidth = 3;\n      } else {\n        borderColor = this.props.borderColor ? this.props.borderColor : 'black';\n        buttonStyle.backgroundColor = 'lightgrey';\n      }\n\n      if (!buttonStyle.padding) buttonStyle.padding = '0.5em';\n      if (!buttonStyle.margin) buttonStyle.margin = '0.5em'; // console.log(borderColor);\n      //if (!buttonStyle.border) \n\n      buttonStyle.border = borderWidth + 'px solid ' + borderColor;\n      if (!buttonStyle.borderRadius) buttonStyle.borderRadius = '100px'; // console.log(['BUTTON STYLE',buttonStyle]);\n\n      var micOffIcon = React.createElement('svg', {\n        style: buttonStyle,\n        'aria-hidden': 'true',\n        'data-prefix': 'fas',\n        'data-icon': 'microphone',\n        className: 'svg-inline--fa fa-microphone fa-w-11',\n        role: 'img',\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 352 512'\n      }, React.createElement('path', {\n        fill: 'currentColor',\n        d: 'M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z'\n      }));\n      var micOnIcon = React.createElement('svg', {\n        style: buttonStyle,\n        'aria-hidden': 'true',\n        'data-prefix': 'fas',\n        'data-icon': 'microphone-slash',\n        className: 'svg-inline--fa fa-microphone-slash fa-w-20',\n        role: 'img',\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 640 512'\n      }, React.createElement('path', {\n        fill: 'currentColor',\n        d: 'M633.82 458.1l-157.8-121.96C488.61 312.13 496 285.01 496 256v-48c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v48c0 17.92-3.96 34.8-10.72 50.2l-26.55-20.52c3.1-9.4 5.28-19.22 5.28-29.67V96c0-53.02-42.98-96-96-96s-96 42.98-96 96v45.36L45.47 3.37C38.49-2.05 28.43-.8 23.01 6.18L3.37 31.45C-2.05 38.42-.8 48.47 6.18 53.9l588.36 454.73c6.98 5.43 17.03 4.17 22.46-2.81l19.64-25.27c5.41-6.97 4.16-17.02-2.82-22.45zM400 464h-56v-33.77c11.66-1.6 22.85-4.54 33.67-8.31l-50.11-38.73c-6.71.4-13.41.87-20.35.2-55.85-5.45-98.74-48.63-111.18-101.85L144 241.31v6.85c0 89.64 63.97 169.55 152 181.69V464h-56c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16z'\n      }));\n      var resetIcon = React.createElement('svg', {\n        'aria-hidden': 'true',\n        style: {\n          height: '1.1em'\n        },\n        role: 'img',\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 512 512'\n      }, React.createElement('path', {\n        fill: 'currentColor',\n        d: 'M500.333 0h-47.411c-6.853 0-12.314 5.729-11.986 12.574l3.966 82.759C399.416 41.899 331.672 8 256.001 8 119.34 8 7.899 119.526 8 256.187 8.101 393.068 119.096 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-33.971-33.971c-4.466-4.466-11.64-4.717-16.38-.543C341.308 415.448 300.606 432 256 432c-97.267 0-176-78.716-176-176 0-97.267 78.716-176 176-176 60.892 0 114.506 30.858 146.099 77.8l-101.525-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12z'\n      }));\n      var stopIcon2 = React.createElement('svg', {\n        'aria-hidden': 'true',\n        style: {\n          height: '1.4em'\n        },\n        role: 'img',\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 512 512'\n      }, React.createElement('path', {\n        fill: 'currentColor',\n        d: 'M440.5 88.5l-52 52L415 167c9.4 9.4 9.4 24.6 0 33.9l-17.4 17.4c11.8 26.1 18.4 55.1 18.4 85.6 0 114.9-93.1 208-208 208S0 418.9 0 304 93.1 96 208 96c30.5 0 59.5 6.6 85.6 18.4L311 97c9.4-9.4 24.6-9.4 33.9 0l26.5 26.5 52-52 17.1 17zM500 60h-24c-6.6 0-12 5.4-12 12s5.4 12 12 12h24c6.6 0 12-5.4 12-12s-5.4-12-12-12zM440 0c-6.6 0-12 5.4-12 12v24c0 6.6 5.4 12 12 12s12-5.4 12-12V12c0-6.6-5.4-12-12-12zm33.9 55l17-17c4.7-4.7 4.7-12.3 0-17-4.7-4.7-12.3-4.7-17 0l-17 17c-4.7 4.7-4.7 12.3 0 17 4.8 4.7 12.4 4.7 17 0zm-67.8 0c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17zm67.8 34c-4.7-4.7-12.3-4.7-17 0-4.7 4.7-4.7 12.3 0 17l17 17c4.7 4.7 12.3 4.7 17 0 4.7-4.7 4.7-12.3 0-17l-17-17zM112 272c0-35.3 28.7-64 64-64 8.8 0 16-7.2 16-16s-7.2-16-16-16c-52.9 0-96 43.1-96 96 0 8.8 7.2 16 16 16s16-7.2 16-16z'\n      }));\n      var config = this.props.config;\n      return React.createElement('div', {\n        id: 'hermodreactmicrophone',\n        style: {\n          zIndex: '9999'\n        }\n      }, 'sending ', this.state.sending ? 'AA' : 'BB', !this.state.activated && React.createElement('span', {\n        onClick: this.activate\n      }, micOnIcon), this.state.activated && this.state.sending && React.createElement('span', {\n        onTouchStart: this.showConfig,\n        onTouchEnd: this.clearConfigTimer,\n        onMouseDown: this.showConfig,\n        onMouseUp: this.clearConfigTimer,\n        onContextMenu: this.showConfigNow,\n        onClick: this.stopRecording\n      }, micOffIcon), this.state.activated && !this.state.sending && React.createElement('span', {\n        onTouchStart: this.showConfig,\n        onTouchEnd: this.clearConfigTimer,\n        onMouseDown: this.showConfig,\n        onMouseUp: this.clearConfigTimer,\n        onContextMenu: this.showConfigNow,\n        onClick: this.startRecording\n      }, micOnIcon), this.state.showMessage && React.createElement('div', {\n        style: {\n          padding: '1em',\n          borderRadius: '20px',\n          backgroundColor: 'skyblue',\n          margin: '5%',\n          width: '90%',\n          top: '1.7em',\n          color: 'black',\n          border: '2px solid blue',\n          zIndex: '9999'\n        }\n      }, this.state.lastTranscript && React.createElement('div', {\n        style: {\n          fontStyle: 'italic'\n        }\n      }, this.state.lastTranscript), false && this.state.lastIntent && React.createElement('div', null, this.state.lastIntent), this.state.lastTts && React.createElement('div', null, this.state.lastTts)), React.createElement('div', {\n        id: 'audio'\n      }));\n    }\n  }]);\n  return HermodReactMicrophone;\n}(HermodReactComponent);\n\nvar HermodReactSpeaker = function (_HermodReactComponent) {\n  inherits(HermodReactSpeaker, _HermodReactComponent);\n\n  function HermodReactSpeaker(props) {\n    classCallCheck(this, HermodReactSpeaker);\n\n    var _this = possibleConstructorReturn(this, (HermodReactSpeaker.__proto__ || Object.getPrototypeOf(HermodReactSpeaker)).call(this, props));\n\n    var that = _this;\n\n    if (!props.siteId || props.siteId.length === 0) {\n      throw \"Speaker must be configured with a siteId property\";\n    }\n\n    _this.playSound = _this.playSound.bind(_this);\n    _this.setVolume = _this.setVolume.bind(_this);\n    _this.state = {\n      volume: .5\n    };\n    var eventFunctions = {\n      // SESSION\n      'hermod/#/speaker/play': function hermodSpeakerPlay(destination, siteId, audio) {\n        if (siteId && siteId.length > 0) {\n          // && siteId === that.props.siteId) {\n          that.playSound(audio).then(function () {\n            //// TODO wait for mqtt mesage    \n            that.sendMqtt(\"hermod/\" + siteId + \"/speaker/finished\", {});\n          });\n        }\n      },\n      'hermod/#/hotword/detected': function hermodHotwordDetected(topic, siteId, payload) {// quarter volume for 10 seconds\n      }\n    };\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    return _this;\n  }\n\n  createClass(HermodReactSpeaker, [{\n    key: 'setVolume',\n    value: function setVolume(volume) {\n      // console.log(['SET VOLUME']);\n      this.setState({\n        volume: volume\n      }); //this.gainNode.gain.value = this.state.volume;\n    }\n  }, {\n    key: 'playSound',\n    value: function playSound(bytes) {\n      var that = this;\n      return new Promise(function (resolve, reject) {\n        if (bytes && that.props.config.enableaudio !== \"no\") {\n          var buffer = new Uint8Array(bytes.length);\n          buffer.set(new Uint8Array(bytes), 0);\n          var audioContext = window.AudioContext || window.webkitAudioContext;\n          var context = new audioContext();\n          var gainNode = context.createGain(); // initial set volume\n\n          gainNode.gain.value = that.props.config.outputvolume / 100 ? that.props.config.outputvolume / 100 : 0.5;\n          context.decodeAudioData(buffer.buffer, function (audioBuffer) {\n            var source = context.createBufferSource();\n            source.buffer = audioBuffer;\n            source.connect(gainNode);\n            gainNode.connect(context.destination);\n            source.start(0);\n\n            source.onended = function () {\n              resolve();\n            };\n          });\n        } else {\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('span', {\n        id: 'Hermodreactspeaker'\n      });\n    }\n  }]);\n  return HermodReactSpeaker;\n}(HermodReactComponent);\n/* global window */\n\n\nvar HermodAppServer = function (_HermodReactComponent) {\n  inherits(HermodAppServer, _HermodReactComponent);\n\n  function HermodAppServer(props) {\n    classCallCheck(this, HermodAppServer);\n\n    var _this = possibleConstructorReturn(this, (HermodAppServer.__proto__ || Object.getPrototypeOf(HermodAppServer)).call(this, props));\n\n    var that = _this;\n    _this.state = {};\n    var eventFunctions = {\n      // SESSION\n      'hermod/intent/#': function hermodIntent(payload, message) {\n        //console.log(['INTENT',this,payload,message]);\n        var parts = message.destinationName ? message.destinationName.split(\"/\") : [];\n\n        if (parts.length > 0 && parts[0] === \"hermes\") {\n          if (parts.length > 1 && parts[1] === \"intent\") {\n            var _payload = {};\n            var intent = parts[2];\n\n            if (intent && intent.length > 0) {\n              try {\n                _payload = JSON.parse(message.payloadString);\n\n                if (that.props.intents && that.props.intents.hasOwnProperty(intent) && that.props.intents[intent]) {\n                  var p = that.props.intents[intent].bind(that)(_payload);\n\n                  if (p && p.then) {\n                    p.then(function (v) {\n                      //console.log(['APP SERVER MESSAGE SUCCESS',intent,payload,v]);\n                      that.sendEndSession.bind(that)(_payload.sessionId);\n                    }).catch(function (v) {\n                      //console.log(['APP SERVER MESSAGE REJECT',intent,payload,v]);\n                      that.sendEndSession.bind(that)(_payload.sessionId);\n                    });\n                  } else {\n                    //console.log(['APP SERVER MESSAGE SUCCESS no promise',intent,payload,p]);\n                    that.sendEndSession.bind(that)(_payload.sessionId);\n                  }\n                } else {\n                  //console.log(['APP SERVER MESSAGE no intent',intent,payload]);\n                  that.sendEndSession.bind(that)(_payload.sessionId);\n                }\n              } catch (e) {//console.log(['APP SERVER FAILED TO PARSE PAYLOAD',e]);\n                //that.sendEndSession.bind(that)();\n              }\n            }\n          }\n        }\n      }\n    };\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    return _this;\n  }\n\n  createClass(HermodAppServer, [{\n    key: 'cleanSlots',\n    value: function cleanSlots(slots) {\n      var final = {};\n\n      if (slots) {\n        slots.map(function (slot) {\n          final[slot.slotName] = {\n            type: slot.value.kind,\n            value: slot.value.value\n          };\n          return;\n        });\n      }\n\n      return final;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('span', {\n        id: 'Hermodreactappserver'\n      });\n    }\n  }]);\n  return HermodAppServer;\n}(HermodReactComponent);\n\nvar Resources = {};\nResources.keywordIDs = {\n  'ok lamp': new Uint8Array([0xac, 0x24, 0x75, 0x21, 0x14, 0x3d, 0x2a, 0xe7, 0x0a, 0x85, 0x75, 0x4c, 0x48, 0x31, 0x5b, 0x44, 0x4b, 0xb6, 0xe8, 0xc3, 0x77, 0x30, 0xd5, 0xac, 0xca, 0x54, 0x06, 0x29, 0xbd, 0x15, 0xca, 0x90, 0x55, 0x81, 0xae, 0x21, 0x6a, 0x04, 0x1e, 0x5a, 0x9d, 0x64, 0x83, 0x0c, 0x04, 0x03, 0x6b, 0xe8, 0x22, 0x2e, 0x19, 0xbf, 0x7e, 0x2b, 0x4d, 0x8c, 0x50, 0x27, 0xb6, 0x11, 0xf3, 0x17, 0xc3, 0xf9, 0xe3, 0x69, 0x19, 0x26, 0xbe, 0x0d, 0xad, 0x78, 0x74, 0x61, 0x4b, 0xb8, 0xde, 0x83, 0x1c, 0xb9, 0xa1, 0x06, 0x27, 0x77, 0x03, 0xb2, 0x24, 0x82]),\n  'navy blue': new Uint8Array([0xd9, 0x36, 0xb2, 0xcc, 0x5d, 0xbb, 0x2b, 0x66, 0xae, 0xbb, 0x39, 0xf3, 0x24, 0xf4, 0x02, 0xf2, 0xb9, 0x5a, 0xf7, 0xd7, 0x8d, 0x02, 0xbc, 0x7b, 0xa3, 0x04, 0xb3, 0xfd, 0x2c, 0x0b, 0x9c, 0x10, 0x2c, 0x28, 0x6f, 0x65, 0x3f, 0xb9, 0x39, 0x08, 0x44, 0x62, 0x47, 0x3a, 0xd8, 0x6d, 0xe7, 0x4a, 0xd9, 0x64, 0x50, 0x6b, 0xd0, 0x39, 0x7e, 0x43, 0x05, 0xeb, 0xf8, 0xc2, 0xe7, 0xab, 0xf5, 0x39, 0x88, 0xd4, 0x99, 0x3c, 0x2d, 0x2a, 0xf2, 0xeb, 0x69, 0x5b, 0x34, 0x7b, 0x51, 0x61, 0x83, 0x82, 0x08, 0x76, 0xdf, 0x86, 0xab, 0xe8, 0x83, 0x48]) //'yellow': new Uint8Array([\n  //0x6f, 0x7d, 0x2c, 0x10, 0xcb, 0xf0, 0x76, 0x1b, 0xee, 0xeb, 0x80, 0xaa,\n  //0xe1, 0xa5, 0xfa, 0x53, 0xe3, 0xce, 0x4b, 0x59, 0x7d, 0xeb, 0xe3, 0x11,\n  //0x13, 0x87, 0x61, 0xa5, 0xef, 0x04, 0x04, 0x37, 0x63, 0xf6, 0x63, 0x91,\n  //0x44, 0x22, 0xf2, 0x50, 0xab, 0xb7, 0x35, 0x8c, 0xcf, 0x33, 0xf7, 0xc1,\n  //0xf1, 0x06, 0x6c, 0x37, 0x6b, 0x2d, 0x50, 0x0e, 0x1c, 0x1c, 0xee, 0x9d,\n  //0x3d, 0x56, 0xa6, 0x54, 0x51, 0xb2, 0xf4, 0x3d, 0x76, 0x7b, 0xcf, 0x4c]),\n  //'orange': new Uint8Array([\n  //0xb6, 0x3e, 0x3e, 0xbf, 0x78, 0x5f, 0x1c, 0xc4, 0xf2, 0xdb, 0x0e, 0xca,\n  //0xd6, 0xb2, 0xad, 0x34, 0x35, 0xe7, 0x90, 0xfb, 0xde, 0x7f, 0x8e, 0x99,\n  //0xab, 0xd1, 0x6b, 0x55, 0x71, 0x94, 0x5c, 0x12, 0xd4, 0x81, 0x1d, 0xd4,\n  //0x71, 0xb2, 0x2b, 0x11, 0x1d, 0xe6, 0x52, 0xdb, 0x30, 0x44, 0x0c, 0xf9,\n  //0xb0, 0xc2, 0x97, 0x3a, 0xe5, 0x78, 0x72, 0xd2, 0x24, 0xd3, 0xde, 0x4e,\n  //0xb0, 0xd5, 0xb9, 0xdf, 0x77, 0xd4, 0x2f, 0x2b, 0x80, 0x1a, 0xe5, 0x5c,\n  //0x8c, 0x9e, 0xc5, 0xb3]),\n  //'purple': new Uint8Array([\n  //0xae, 0xce, 0x95, 0x72, 0x5d, 0x85, 0x46, 0x3b, 0x45, 0x50, 0x72, 0xb3,\n  //0xd1, 0x80, 0xfa, 0x1c, 0x17, 0x4f, 0x6c, 0x2a, 0x76, 0x5e, 0x0e, 0xb0,\n  //0x2d, 0x1b, 0x62, 0x8d, 0xa3, 0xf5, 0x64, 0xff, 0xc7, 0xf6, 0xf2, 0xe3,\n  //0xc5, 0x34, 0xef, 0x78, 0x1e, 0xb1, 0xeb, 0x0c, 0xaa, 0x29, 0x5b, 0xb3,\n  //0xa8, 0x25, 0x14, 0xd4, 0x80, 0xbf, 0x93, 0x89, 0xe1, 0x7c, 0x5e, 0xd8,\n  //0x08, 0x3a, 0xbf, 0x9f, 0x7f, 0xe7, 0x79, 0x13, 0xed, 0xbc, 0xa3, 0x0b,\n  //0xf4, 0xd2, 0xfc, 0xf2]),\n  //'white': new Uint8Array([\n  //0x5e, 0x52, 0xf1, 0xab, 0x90, 0xae, 0x36, 0x5f, 0x98, 0xd2, 0x96, 0xba,\n  //0xd8, 0x13, 0x16, 0xf1, 0x66, 0x73, 0xa5, 0xbb, 0x95, 0x0d, 0xfa, 0x9e,\n  //0x47, 0x05, 0xc7, 0x3d, 0x36, 0xaf, 0x97, 0x14, 0x98, 0xbc, 0x15, 0xfb,\n  //0xa0, 0xdc, 0xb1, 0x60, 0xa2, 0x60, 0x1d, 0x0a, 0x66, 0x5f, 0x47, 0xb8,\n  //0xfd, 0x71, 0x3b, 0xe3, 0x06, 0x8d, 0xf4, 0xbd, 0xc6, 0x02, 0xbe, 0x47,\n  //0xde, 0x7f, 0xa4, 0x12, 0x9f, 0x07, 0x93, 0xc4, 0xc7, 0x97, 0xd8, 0x9a])\n\n};\n/* global window */\n\nvar HermodReactHotwordServer = function (_HermodReactComponent) {\n  inherits(HermodReactHotwordServer, _HermodReactComponent);\n\n  function HermodReactHotwordServer(props) {\n    classCallCheck(this, HermodReactHotwordServer);\n\n    var _this = possibleConstructorReturn(this, (HermodReactHotwordServer.__proto__ || Object.getPrototypeOf(HermodReactHotwordServer)).call(this, props));\n\n    _this.sensitivities = new Float32Array([1]);\n    _this.hotwordManager = null;\n\n    if (!props.siteId || props.siteId.length === 0) {\n      throw \"HOTWORD Server must be configured with a siteId property\";\n    }\n\n    var that = _this;\n    that.props = props;\n    _this.gainNode = null;\n    _this.hotwordId = _this.props.hotwordId && _this.props.hotwordId.length > 0 ? _this.props.hotwordId : 'default';\n    _this.sendHotwordDetected = _this.sendHotwordDetected.bind(_this);\n    _this.sendHotwordToggleOn = _this.sendHotwordToggleOn.bind(_this);\n    _this.startHotword = _this.startHotword.bind(_this);\n    _this.stopHotword = _this.stopHotword.bind(_this);\n    _this.hotwordCallback = _this.hotwordCallback.bind(_this);\n    var eventFunctions = {\n      // SESSION\n      'hermod/#/hotword/start': function hermodHotwordStart(topic, siteId, payload) {\n        if (siteId && siteId.length > 0) {\n          // && payload.siteId === that.props.siteId) {\n          that.startHotword(siteId);\n        }\n      },\n      'hermod/#/hotword/stop': function hermodHotwordStop(topic, siteId, payload) {\n        if (siteId && siteId.length > 0) {\n          // && payload.siteId === that.props.siteId) {\n          that.stopHotword();\n        }\n      }\n    };\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    return _this;\n  }\n\n  createClass(HermodReactHotwordServer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var that = this;\n\n      if (this.props.config.hotword.startsWith(\"browser:\")) {\n        setTimeout(function () {\n          that.startHotword(that.props.siteId);\n        }, 1000);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props, state) {\n      //  console.log(['HW DID UPDATE',props,state,JSON.parse(JSON.stringify(this.props)),this.props.config.hotword + ':' + props.config.hotword]);\n      var that = this;\n      if (props.inputvolume != this.props.inputvolume) ;\n\n      if (props.config.hotword != this.props.config.hotword) {\n        this.hotwordManager = null; // console.log(['RESTART HOTWORD']);\n\n        if (this.props.config.hotword.startsWith(\"browser:\")) {\n          setTimeout(function () {\n            that.startHotword(that.props.siteId);\n          }, 1000);\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: 'stopHotword',\n\n    /**\n     * Pause the hotword manager\n     */\n    value: function stopHotword() {\n      if (this.hotwordManager) this.hotwordManager.pauseProcessing();\n    }\n  }, {\n    key: 'startHotword',\n\n    /**\n     * Create or continue the hotword manager\n     */\n    value: function startHotword(siteId) {\n      if (siteId === this.props.siteId) {\n        if (this.hotwordManager === null) {\n          //console.log(['REALLY START HOTWORD',this.props.config.hotword]);\n          var parts = this.props.config.hotword.split(\":\");\n\n          if (parts.length > 1) {\n            var localHotword = parts[1];\n            this.hotwordManager = new PicovoiceAudioManager(this.props.addInputGainNode, this.props.config.inputvolume);\n            var singleSensitivity = this.props.config.hotwordsensitivity ? this.props.config.hotwordsensitivity / 100 : 0.9;\n            var sensitivities = new Float32Array([singleSensitivity]);\n            var selectedKeyword = null;\n\n            if (Resources.keywordIDs.hasOwnProperty(localHotword)) {\n              selectedKeyword = Resources.keywordIDs[localHotword]; //  console.log(['SELECTED KW',localHotword,selectedKeyword]);\n\n              this.hotwordManager.start(Porcupine.create([selectedKeyword], sensitivities), this.hotwordCallback, function (e) {\n                console.log(['HOTWORD error', e]);\n              });\n            }\n          }\n        } else {\n          if (this.hotwordManager) this.hotwordManager.continueProcessing();\n        }\n      }\n    }\n  }, {\n    key: 'hotwordCallback',\n    value: function hotwordCallback(value) {\n      if (!isNaN(value) && parseInt(value, 10) >= 0) {\n        this.sendStartSession(this.props.siteId, {\n          startedBy: 'Hermodreacthotword',\n          user: this.props.user ? this.props.user._id : ''\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('span', {\n        id: 'Hermodreacthotwordserver'\n      });\n    }\n  }]);\n  return HermodReactHotwordServer;\n}(HermodReactComponent);\n\nvar HermodReactTts = function (_HermodReactComponent) {\n  inherits(HermodReactTts, _HermodReactComponent);\n\n  function HermodReactTts(props) {\n    classCallCheck(this, HermodReactTts);\n\n    var _this = possibleConstructorReturn(this, (HermodReactTts.__proto__ || Object.getPrototypeOf(HermodReactTts)).call(this, props));\n\n    if (!props.siteId || props.siteId.length === 0) {\n      throw \"TTS Server must be configured with a siteId property\";\n    } //this.props.config={}\n\n\n    var that = _this;\n    var eventFunctions = {\n      // SESSION\n      'hermod/#/tts/say': function hermodTtsSay(topic, siteId, payload) {\n        if (siteId && siteId.length > 0) {\n          // && payload.siteId === props.siteId) {\n          if (payload.text && payload.text.length > 0) {\n            that.say(payload.text);\n          }\n\n          that.sendMqtt('hermod/' + siteId + '/tts/sayFinished', {\n            id: payload.id\n          });\n        }\n      }\n    };\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    return _this;\n  }\n\n  createClass(HermodReactTts, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initSpeechSynthesis();\n    }\n  }, {\n    key: 'say',\n\n    /**\n      * Synthesise speech from text and send to to audio output\n      */\n    value: function say(text) {\n      console.log(['TTS SAY', this.props, this.props.config, this.props.config.enablevoice]);\n\n      if (this.props.config.enabletts !== \"no\") {\n        var voice = this.props.config && this.props.config.ttsvoice ? this.props.config.ttsvoice : 'default';\n\n        if (voice === \"default\") {\n          // js generated fallback\n          speak(text, {\n            amplitude: !isNaN(parseFloat(this.props.config.voicevolume)) ? parseFloat(this.props.config.voicevolume) : 70,\n            pitch: !isNaN(parseFloat(this.props.config.voicepitch)) ? parseFloat(this.props.config.voicepitch) : 50,\n            speed: !isNaN(parseFloat(this.props.config.voicerate)) ? parseFloat(this.props.config.voicerate) * 2.2 : 175\n          });\n        } else {\n          // Create a new instance of SpeechSynthesisUtterance.\n          var msg = new SpeechSynthesisUtterance();\n          msg.text = text;\n          msg.volume = !isNaN(parseFloat(this.props.config.voicevolume)) ? parseFloat(this.props.config.voicevolume) : 50;\n          msg.rate = !isNaN(parseFloat(this.props.config.voicerate)) ? parseFloat(this.props.config.voicerate) / 100 : 50 / 100;\n          msg.pitch = !isNaN(parseFloat(this.props.config.voicepitch)) ? parseFloat(this.props.config.voicepitch) : 50;\n          var voices = speechSynthesis.getVoices(); // Loop through each of the voices.\n\n          voices.forEach(function (voiceItem, i) {\n            if (voiceItem.name === voice) msg.voice = voiceItem;\n            window.speechSynthesis.speak(msg);\n          });\n        }\n      }\n    }\n  }, {\n    key: 'initSpeechSynthesis',\n    value: function initSpeechSynthesis() {\n      var that = this;\n\n      if ('speechSynthesis' in window) {\n        // Fetch the list of voices and populate the voice options.\n        var loadVoices = function loadVoices() {\n          // Fetch the available voices.\n          var voices = speechSynthesis.getVoices(); // Loop through each of the voices\n\n          var voiceOptions = [];\n          voices.forEach(function (voice, i) {\n            // Create a new option element.\n            voiceOptions.push({\n              'name': voice.name,\n              label: voice.name\n            });\n          });\n          voiceOptions.push({\n            'name': 'default',\n            label: 'Browser Generated'\n          });\n          that.setState({\n            voices: voiceOptions\n          }); //console.log(['VOICES a',voiceOptions]);\n        }; // Execute loadVoices.\n\n\n        loadVoices(); // Chrome loads voices asynchronously.\n\n        window.speechSynthesis.onvoiceschanged = function (e) {\n          loadVoices();\n        };\n      } else {\n        var voiceOptions = [];\n        voiceOptions.push({\n          'name': 'default',\n          label: 'Browser Generated'\n        });\n        that.setState({\n          voices: voiceOptions\n        });\n      } // console.log(['LOADED VOICES',this.state.voices]);\n\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('b', {\n        id: 'Hermodreacttts'\n      });\n    }\n  }]);\n  return HermodReactTts;\n}(HermodReactComponent);\n/* global window */\n\n\nvar HermodReactLogger = function (_Component) {\n  inherits(HermodReactLogger, _Component);\n\n  function HermodReactLogger(props) {\n    classCallCheck(this, HermodReactLogger);\n\n    var _this = possibleConstructorReturn(this, (HermodReactLogger.__proto__ || Object.getPrototypeOf(HermodReactLogger)).call(this, props));\n\n    _this.state = {\n      showLogMessages: {},\n      showLog: {}\n    };\n    _this.toggleMessageExpansion = _this.toggleMessageExpansion.bind(_this);\n    _this.isLogMessageExpanded = _this.isLogMessageExpanded.bind(_this);\n    _this.isLogExpanded = _this.isLogExpanded.bind(_this);\n    _this.toggleLogExpansion = _this.toggleLogExpansion.bind(_this);\n    return _this;\n  }\n\n  createClass(HermodReactLogger, [{\n    key: 'toggleMessageExpansion',\n    value: function toggleMessageExpansion(e, key) {\n      var showLogMessages = this.state.showLogMessages;\n\n      if (this.isLogMessageExpanded(key)) {\n        showLogMessages[key] = false;\n      } else {\n        showLogMessages[key] = true;\n      }\n\n      this.setState({\n        showLogMessages: showLogMessages\n      });\n    }\n  }, {\n    key: 'toggleLogExpansion',\n    value: function toggleLogExpansion(e, key) {\n      var showLog = this.state.showLog;\n\n      if (this.isLogExpanded(key)) {\n        showLog[key] = false;\n      } else {\n        showLog[key] = true;\n      }\n\n      this.setState({\n        showLog: showLog\n      });\n    }\n  }, {\n    key: 'isLogMessageExpanded',\n    value: function isLogMessageExpanded(key) {\n      if (this.state.showLogMessages.hasOwnProperty(key) && this.state.showLogMessages[key]) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'isLogExpanded',\n    value: function isLogExpanded(key) {\n      if (this.state.showLog.hasOwnProperty(key) && this.state.showLog[key]) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var that = this;\n      return React.createElement('b', null, 'logger');\n\n      if (this.props.sites) {\n        var sitesRendered = Object.keys(this.props.sites).map(function (siteKeyIn) {\n          var siteKey = siteKeyIn && siteKeyIn.length > 0 ? siteKeyIn : 'unknownSite';\n          var site = that.props.sites[siteKey];\n          var sessions = Object.values(site);\n          sessions.sort(function (a, b) {\n            if (a.starttimestamp < b.starttimestamp) return 1;else return -1;\n          });\n\n          if (!that.props.siteId || that.props.siteId && siteKey === that.props.siteId) {\n            var sessionsRendered = sessions.map(function (session, sessionLoopKey) {\n              if (session) {\n                var logs = that.props.messages.map(function (val, key) {\n                  if (val.sessionId === session.sessionId) {\n                    return React.createElement('div', {\n                      key: key\n                    }, React.createElement('button', {\n                      onClick: function onClick(e) {\n                        return that.toggleMessageExpansion(e, key);\n                      }\n                    }, '+'), '\\xA0\\xA0', val.text, that.isLogMessageExpanded(key) && React.createElement('pre', null, val.payload));\n                  }\n\n                  return [];\n                });\n                var statusText = that.props.sessionStatusText[session.sessionId];\n                var sessionClass = 'session-' + statusText;\n                var sessionStyle = {\n                  margin: '1em',\n                  padding: '1em',\n                  border: '2px solid black',\n                  borderRadius: '10px'\n                };\n                var sessionItems = [];\n                var audioItems = [];\n\n                if (session.audio) {\n                  audioItems = session.audio.map(function (audioData, ikey) {\n                    return React.createElement('span', {\n                      key: ikey\n                    }, audioData[ikey] && audioData.length > 0 && React.createElement('audio', {\n                      src: audioData,\n                      controls: true,\n                      style: {\n                        float: 'right'\n                      }\n                    }));\n                  });\n                }\n\n                if (session.asr) sessionItems = session.asr.map(function (transcript, ikey) {\n                  var slotValues = [];\n                  if (session.intents && session.intents.length > ikey && session.intents[ikey]) slotValues = session.intents[ikey].slots.map(function (slot, skey) {\n                    return React.createElement('li', {\n                      key: skey\n                    }, slot.slotName.split('_').join(' '), ' ', slot.value.value);\n                  });\n                  return React.createElement('div', {\n                    key: ikey\n                  }, React.createElement('div', {\n                    style: {\n                      marginBottom: '1em',\n                      fontWeight: 'bold'\n                    }\n                  }, transcript.text), session.tts && session.tts.length > 0 && React.createElement('div', null, React.createElement('hr', {\n                    style: {\n                      height: '1px',\n                      width: '100%'\n                    }\n                  }), '                               ', React.createElement('div', null, React.createElement('i', null, session.tts && session.tts.length > ikey && session.tts[ikey] && session.tts[ikey].text))), React.createElement('div', null, React.createElement('hr', {\n                    style: {\n                      height: '1px',\n                      width: '100%'\n                    }\n                  })), React.createElement('div', null, slotValues && React.createElement('ul', null, slotValues)));\n                });\n\n                if (session.started && session.sessionId) {\n                  return React.createElement('div', {\n                    className: sessionClass,\n                    style: sessionStyle,\n                    key: sessionLoopKey\n                  }, React.createElement('button', {\n                    style: {\n                      display: 'inline',\n                      paddingRight: '0.5em'\n                    },\n                    onClick: function onClick(e) {\n                      return that.toggleLogExpansion(e, session.sessionId);\n                    }\n                  }, '+'), React.createElement('h4', {\n                    style: {\n                      marginLeft: '1em',\n                      display: 'inline',\n                      clear: 'right'\n                    }\n                  }, session.sessionId, ' ', that.props.sessionStatusText[session.sessionId], ' '), React.createElement('div', {\n                    style: {\n                      float: 'right'\n                    }\n                  }, audioItems), React.createElement('hr', {\n                    style: {\n                      height: '1px',\n                      width: '100%'\n                    }\n                  }), React.createElement('div', null, sessionItems), React.createElement('hr', {\n                    style: {\n                      height: '1px',\n                      width: '100%'\n                    }\n                  }), that.isLogExpanded(session.sessionId) && React.createElement('div', null, logs));\n                } //\n\n              }\n\n              return [];\n            });\n            var activityStyle = {\n              padding: '0.2em',\n              borderRadius: '5px',\n              float: 'right',\n              marginRight: '4em'\n            };\n            return React.createElement('div', {\n              style: {\n                margin: '1em',\n                padding: '1em',\n                border: '2px solid black',\n                borderRadius: '10px'\n              },\n              key: siteKey\n            }, siteKey, that.props.hotwordListening[siteKey] && React.createElement('b', {\n              style: Object.assign({\n                backgroundColor: 'lightpink',\n                border: '1px solid red'\n              }, activityStyle)\n            }, 'Hotword'), that.props.audioListening[siteKey] && React.createElement('b', {\n              style: Object.assign({\n                backgroundColor: 'lightgreen',\n                border: '1px solid green'\n              }, activityStyle)\n            }, 'Listening'), React.createElement('div', null, sessionsRendered));\n          }\n\n          return;\n        });\n        return React.createElement('b', null, sitesRendered, React.createElement('br', null));\n      } else {\n        return [];\n      }\n    }\n  }]);\n  return HermodReactLogger;\n}(Component);\n/* global window */\n\n\nvar HermodReactFlatLogger = function (_Component) {\n  inherits(HermodReactFlatLogger, _Component);\n\n  function HermodReactFlatLogger(props) {\n    classCallCheck(this, HermodReactFlatLogger);\n\n    var _this = possibleConstructorReturn(this, (HermodReactFlatLogger.__proto__ || Object.getPrototypeOf(HermodReactFlatLogger)).call(this, props));\n\n    _this.state = {\n      showLogMessages: {}\n    };\n    _this.toggleMessageExpansion = _this.toggleMessageExpansion.bind(_this);\n    _this.isLogMessageExpanded = _this.isLogMessageExpanded.bind(_this);\n    return _this;\n  }\n\n  createClass(HermodReactFlatLogger, [{\n    key: 'toggleMessageExpansion',\n    value: function toggleMessageExpansion(e, key) {\n      var showLogMessages = this.state.showLogMessages;\n\n      if (this.isLogMessageExpanded(key)) {\n        showLogMessages[key] = false;\n      } else {\n        showLogMessages[key] = true;\n      }\n\n      this.setState({\n        showLogMessages: showLogMessages\n      });\n    }\n  }, {\n    key: 'isLogMessageExpanded',\n    value: function isLogMessageExpanded(key) {\n      if (this.state.showLogMessages.hasOwnProperty(key) && this.state.showLogMessages[key]) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var that = this;\n\n      if (this.props.messages) {\n        var logs = that.props.messages.map(function (val, key) {\n          return React.createElement('div', {\n            key: key\n          }, React.createElement('button', {\n            onClick: function onClick(e) {\n              return that.toggleMessageExpansion(e, key);\n            }\n          }, '+'), '\\xA0\\xA0', val.text, that.isLogMessageExpanded(key) && React.createElement('pre', null, val.payload));\n        });\n        return React.createElement('div', null, logs);\n      }\n    }\n  }]);\n  return HermodReactFlatLogger;\n}(Component);\n/* global navigator */\n// Polyfill: mediaDevices.\n// Not work on Desktop Safari, IE.\n// Not work on Mobile browsers.\n\n\nvar nav = {};\n\nnav.mediaDevices = function () {\n  if (navigator.mediaDevices) {\n    return navigator.mediaDevices;\n  }\n\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n  if (navigator.getUserMedia) {\n    return {\n      getUserMedia: function getUserMedia(c) {\n        return new Promise(function (y, n) {\n          navigator.getUserMedia.call(navigator, c, y, n);\n        });\n      }\n    };\n  }\n}();\n\nif (!nav.mediaDevices) {\n  alert(\"mediaDevices() not supported.\");\n  throw new Error(\"mediaDevices() not supported.\");\n} // Polyfill: AudioContext.\n\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\n\nvar AudioMeter = function (_Component) {\n  inherits(AudioMeter, _Component);\n\n  function AudioMeter(props) {\n    classCallCheck(this, AudioMeter);\n\n    var _this = possibleConstructorReturn(this, (AudioMeter.__proto__ || Object.getPrototypeOf(AudioMeter)).call(this, props));\n\n    _this.state = {\n      volume: 0,\n      debug: false\n    };\n    return _this;\n  }\n\n  createClass(AudioMeter, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // Processing.\n      var process = function (event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var sum = 0;\n        var x;\n\n        for (var i = 0; i < buf.length; i++) {\n          x = buf[i];\n          sum += x * x;\n        }\n\n        var rms = Math.sqrt(sum / buf.length);\n        this.setState({\n          volume: Math.max(rms, this.state.volume * this.averaging)\n        }); //console.log('Volume: ' + this.state.volume);\n\n        if (this.state.volume > (this.props.volumeWarning > 0 ? this.props.volumeWarning : 0.25)) this.canvasCtx.fillStyle = this.props.style.tooLoudColor ? this.props.style.tooLoudColor : '#FF0000';else this.canvasCtx.fillStyle = this.props.style.color ? this.props.style.color : '#00FF48';\n        this.canvasCtx.clearRect(0, 0, this.canvasCtx.canvas.width, this.canvasCtx.canvas.height);\n        this.canvasCtx.fillRect(0, this.canvasCtx.canvas.height * (1 - this.state.volume * 4), this.canvasCtx.canvas.width, this.canvasCtx.canvas.height);\n      }.bind(this); // Init processing.\n\n\n      nav.mediaDevices.getUserMedia({\n        audio: true\n      }).then(function (stream) {\n        var audioCtx = new AudioContext();\n        var source = audioCtx.createMediaStreamSource(stream);\n        var processor = audioCtx.createScriptProcessor(256);\n        var gainNode = audioCtx.createGain();\n        gainNode.gain.value = this.props.inputvolume > 0 ? this.props.inputvolume / 100 : 0.5; //console.log(['IV',this.props.inputvolume]);\n\n        this.averaging = 0.95;\n        this.canvasCtx = this.refs.canvas.getContext('2d');\n        this.canvasCtx.fillStyle = this.props.style.color ? this.props.style.color : '#00FF48';\n        processor.onaudioprocess = process;\n        processor.connect(audioCtx.destination);\n        gainNode.connect(processor);\n        source.connect(gainNode);\n        if (this.props.addInputGainNode) this.props.addInputGainNode(gainNode);\n      }.bind(this)).catch(function (err) {\n        console.log('Error occurred while initalizing audio input: ' + err.toString());\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var canvasStyle = this.props.style ? Object.assign({}, this.props.style) : {};\n      canvasStyle.height = this.props.style.height > 0 ? this.props.style.height : 78;\n      canvasStyle.width = this.props.style.width > 0 ? this.props.style.width : 30;\n      return React.createElement('canvas', {\n        style: canvasStyle,\n        ref: 'canvas',\n        width: canvasStyle.width,\n        height: canvasStyle.height\n      });\n    }\n  }]);\n  return AudioMeter;\n}(Component);\n\nvar HermodReactConfig = function (_HermodReactComponent) {\n  inherits(HermodReactConfig, _HermodReactComponent);\n\n  function HermodReactConfig(props) {\n    classCallCheck(this, HermodReactConfig);\n\n    var _this = possibleConstructorReturn(this, (HermodReactConfig.__proto__ || Object.getPrototypeOf(HermodReactConfig)).call(this, props));\n\n    if (!props.siteId || props.siteId.length === 0) {\n      throw \"Config must be configured with a siteId property\";\n    }\n\n    var eventFunctions = {};\n    _this.hideConfig = _this.hideConfig.bind(_this);\n    _this.logger = _this.connectToLogger(props.logger, eventFunctions);\n    _this.resetConfig = _this.resetConfig.bind(_this);\n    return _this;\n  }\n  /**\n  * Activate on mount if user has previously enabled.\n  */\n\n\n  createClass(HermodReactConfig, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      //this.initSpeechSynthesis.bind(this)();\n      this.loadSpeechSynthesisVoices.bind(this)(); // if previously activated, restore microphone\n      //if (localStorage.getItem(this.appendUserId('Hermodmicrophone_enabled',this.props.user)) === 'true') {\n      //this.activate(false);\n      //}\n    }\n    /**\n     * Send Mqtt message to end the session immediately\n     */\n\n  }, {\n    key: 'sendTestSay',\n    value: function sendTestSay(e) {\n      e.preventDefault();\n      this.sendMqtt(\"hermod/tts/say\", {\n        siteId: this.props.siteId,\n        text: 'This is a test to hear how I speak.'\n      });\n    }\n  }, {\n    key: 'resetConfig',\n    value: function resetConfig(e) {\n      e.preventDefault();\n      var newConfig = this.getDefaultConfig();\n      this.setState({\n        'config': newConfig\n      });\n      localStorage.setItem(this.appendUserId('Hermodmicrophone_config', this.props.user), JSON.stringify(newConfig));\n      if (this.props.configurationChange) this.props.configurationChange(newConfig);\n    }\n  }, {\n    key: 'getDefaultConfig',\n    value: function getDefaultConfig() {\n      //console.log(['GDC',this.state]);\n      return {\n        inputvolume: '70',\n        outputvolume: '70',\n        voicevolume: '70',\n        ttsvoice: 'default',\n        //this.state.voices && this.state.voices.length > 0 ? this.state.voices[0].name :\n        voicerate: '50',\n        voicepitch: '50',\n        hotword: 'browser:oklamp',\n        hotwordsensitivity: '50',\n        enabletts: 'yes',\n        enableaudio: 'yes',\n        enablenotifications: 'yes'\n      };\n    }\n  }, {\n    key: 'appendUserId',\n    value: function appendUserId(text, user) {\n      if (user && user._id) {\n        return text + \"_\" + user._id;\n      } else {\n        return text;\n      }\n    }\n  }, {\n    key: 'configurationChange',\n    value: function configurationChange(e) {\n      var that = this; //console.log(['configurationChange',this,e,e.target.value,e.target.id]);\n\n      var config = this.props.config;\n      config[e.target.id] = e.target.value;\n      this.setState({\n        config: config\n      }); // set silence threshhold directly\n\n      if (e.target.id === \"inputvolume\") {\n        // update all input gain nodes\n        this.props.inputGainNodes.map(function (node) {\n          //console.log(['set gain',node,that.props.config.inputvolume/100]);\n          node.gain.value = that.props.config.inputvolume / 100;\n        });\n      }\n\n      localStorage.setItem(this.appendUserId('Hermodmicrophone_config', this.props.user), JSON.stringify(config));\n      if (this.props.configurationChange) this.props.configurationChange(this.props.config);\n    }\n  }, {\n    key: 'loadSpeechSynthesisVoices',\n    value: function loadSpeechSynthesisVoices() {\n      var that = this;\n\n      if ('speechSynthesis' in window) {\n        // Fetch the list of voices and populate the voice options.\n        var loadVoices = function loadVoices() {\n          // Fetch the available voices.\n          var voices = speechSynthesis.getVoices(); // Loop through each of the voices\n\n          var voiceOptions = [];\n          voices.forEach(function (voice, i) {\n            // Create a new option element.\n            voiceOptions.push({\n              'name': voice.name,\n              label: voice.name\n            });\n          });\n          voiceOptions.push({\n            'name': 'default',\n            label: 'Browser Generated'\n          });\n          that.setState({\n            voices: voiceOptions\n          }); //console.log(['VOICES a',voiceOptions]);\n        }; // Execute loadVoices.\n\n\n        loadVoices(); // Chrome loads voices asynchronously.\n\n        window.speechSynthesis.onvoiceschanged = function (e) {\n          loadVoices();\n        };\n      } else {\n        var voiceOptions = [];\n        voiceOptions.push({\n          'name': 'default',\n          label: 'Browser Generated'\n        });\n        that.setState({\n          voices: voiceOptions\n        });\n      } // console.log(['LOADED VOICES',this.state.voices]);\n\n    }\n  }, {\n    key: 'hideConfig',\n    value: function hideConfig() {\n      if (this.props.hideConfig) this.props.hideConfig();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var voiceOptions = this.state.voices && this.state.voices.map(function (voice) {\n        return React.createElement('option', {\n          key: voice.name,\n          value: voice.name\n        }, voice.label);\n      });\n      var resetIcon = React.createElement('svg', {\n        'aria-hidden': 'true',\n        style: {\n          height: '1.1em'\n        },\n        role: 'img',\n        xmlns: 'http://www.w3.org/2000/svg',\n        viewBox: '0 0 512 512'\n      }, React.createElement('path', {\n        fill: 'currentColor',\n        d: 'M500.333 0h-47.411c-6.853 0-12.314 5.729-11.986 12.574l3.966 82.759C399.416 41.899 331.672 8 256.001 8 119.34 8 7.899 119.526 8 256.187 8.101 393.068 119.096 504 256 504c63.926 0 122.202-24.187 166.178-63.908 5.113-4.618 5.354-12.561.482-17.433l-33.971-33.971c-4.466-4.466-11.64-4.717-16.38-.543C341.308 415.448 300.606 432 256 432c-97.267 0-176-78.716-176-176 0-97.267 78.716-176 176-176 60.892 0 114.506 30.858 146.099 77.8l-101.525-4.865c-6.845-.328-12.574 5.133-12.574 11.986v47.411c0 6.627 5.373 12 12 12h200.333c6.627 0 12-5.373 12-12V12c0-6.627-5.373-12-12-12z'\n      }));\n      var inputStyle = {\n        marginBottom: '0.5em',\n        fontSize: '0.9em'\n      };\n      var config = this.props.config;\n      return React.createElement('div', null, React.createElement('div', {\n        style: {\n          minHeight: '25em',\n          margin: '1em',\n          padding: '1em',\n          width: '90%',\n          border: '2px solid black',\n          borderRadius: '10px',\n          backgroundColor: 'white',\n          zIndex: '9'\n        }\n      }, React.createElement('button', {\n        style: {\n          float: 'right',\n          fontSize: '1.6em',\n          fontWeight: 'bold',\n          border: '2px solid black',\n          borderRadius: '50px'\n        },\n        onClick: this.hideConfig\n      }, 'X'), React.createElement('div', {\n        style: {\n          float: 'left',\n          marginRight: '2em'\n        }\n      }, status >= 2 && React.createElement('span', {\n        onClick: this.deactivate\n      }, React.createElement('button', {\n        className: 'btn btn-danger',\n        style: {\n          fontSize: '1.5em'\n        }\n      }, ' ', stopIcon2, ' Disable '))), React.createElement('h1', null, 'Microphone Configuration'), React.createElement('form', {\n        style: {\n          fontSize: '1.8em'\n        }\n      }, React.createElement('div', {\n        style: {\n          clear: 'both',\n          width: '100%'\n        }\n      }, React.createElement('div', {\n        style: {\n          float: 'right'\n        }\n      }, React.createElement(AudioMeter, {\n        inputvolume: this.props.config.inputvolume,\n        addInputGainNode: this.props.addInputGainNode,\n        source: this.source,\n        style: {\n          float: 'right',\n          marginRight: \"2em\",\n          height: '200',\n          width: '50',\n          dtooLoudColor: \"#FF9800\",\n          scolor: '#889bd8',\n          border: '1px solid black',\n          backgroundColor: 'lightgrey'\n        }\n      })), React.createElement('div', {\n        style: {\n          width: '80%'\n        }\n      }, React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('b', {\n        style: {\n          marginBottom: '0.8em'\n        }\n      }, 'Volume\\xA0\\xA0\\xA0')), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'inputvolume'\n      }, 'Microphone '), React.createElement('input', {\n        type: 'range',\n        id: 'inputvolume',\n        value: config.inputvolume,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle),\n        min: '0',\n        max: '200'\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'outputvolume'\n      }, 'Output '), React.createElement('input', {\n        type: 'range',\n        id: 'outputvolume',\n        value: config.outputvolume,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle)\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'voicevolume'\n      }, 'Voice '), React.createElement('input', {\n        type: 'range',\n        id: 'voicevolume',\n        value: config.voicevolume,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle)\n      })))), React.createElement('div', {\n        style: {\n          clear: 'both',\n          width: '100%'\n        },\n        className: 'form-group'\n      }, React.createElement('hr', {\n        style: {\n          width: '100%'\n        }\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'hotword'\n      }, 'Hotword '), React.createElement('select', {\n        style: inputStyle,\n        id: 'hotword',\n        value: config.hotword,\n        onChange: this.configurationChange.bind(this)\n      }, React.createElement('option', {\n        value: 'browser:ok lamp'\n      }, 'OK Lamp (Browser)'), React.createElement('option', {\n        value: 'browser:navy blue'\n      }, 'Navy Blue (Browser)'), React.createElement('option', {\n        value: 'disabled'\n      }, 'Disabled'))), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'hotwordsensitivity'\n      }, 'Hotword Sensitivity '), React.createElement('input', {\n        type: 'range',\n        id: 'hotwordsensitivity',\n        value: config.hotwordsensitivity,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle)\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('hr', {\n        style: {\n          width: '100%'\n        }\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('b', {\n        style: {\n          marginBottom: '0.8em'\n        }\n      }, 'Notifications\\xA0\\xA0\\xA0')), React.createElement('div', {\n        className: 'form-inline'\n      }, React.createElement('label', {\n        htmlFor: 'enabletts'\n      }, ' Voice '), React.createElement('select', {\n        style: inputStyle,\n        id: 'enabletts',\n        value: config.enabletts,\n        onChange: this.configurationChange.bind(this)\n      }, React.createElement('option', {\n        value: 'yes'\n      }, 'Yes'), React.createElement('option', {\n        value: 'no'\n      }, 'No')), React.createElement('label', {\n        htmlFor: 'enableaudio'\n      }, ' Audio '), React.createElement('select', {\n        style: inputStyle,\n        id: 'enableaudio',\n        value: config.enableaudio,\n        onChange: this.configurationChange.bind(this)\n      }, React.createElement('option', {\n        value: 'yes'\n      }, 'Yes'), React.createElement('option', {\n        value: 'no'\n      }, 'No')), React.createElement('label', {\n        htmlFor: 'enablenotifications'\n      }, ' Screen '), React.createElement('select', {\n        style: inputStyle,\n        id: 'enablenotifications',\n        value: config.enablenotifications,\n        onChange: this.configurationChange.bind(this)\n      }, React.createElement('option', {\n        value: 'yes'\n      }, 'Yes'), React.createElement('option', {\n        value: 'no'\n      }, 'No'))), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('hr', {\n        style: {\n          width: '100%'\n        }\n      })), React.createElement('div', {\n        className: 'form-inline'\n      }, React.createElement('label', {\n        htmlFor: 'ttsvoice'\n      }, 'Voice '), React.createElement('select', {\n        style: inputStyle,\n        id: 'ttsvoice',\n        value: config.ttsvoice,\n        onChange: this.configurationChange.bind(this)\n      }, voiceOptions), '\\xA0\\xA0\\xA0', React.createElement('button', {\n        className: 'btn btn-success',\n        style: {\n          fontSize: '1em'\n        },\n        onClick: this.sendTestSay.bind(this)\n      }, 'Test')), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'voicerate'\n      }, 'Rate '), React.createElement('input', {\n        type: 'range',\n        id: 'voicerate',\n        value: config.voicerate,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle)\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('label', {\n        htmlFor: 'voicepitch'\n      }, 'Pitch '), React.createElement('input', {\n        type: 'range',\n        id: 'voicepitch',\n        value: config.voicepitch,\n        onChange: this.configurationChange.bind(this),\n        style: Object.assign({\n          width: '80%'\n        }, inputStyle)\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('hr', {\n        style: {\n          width: '100%'\n        }\n      }), React.createElement('span', {\n        onClick: this.resetConfig\n      }, React.createElement('button', {\n        className: 'btn btn-danger',\n        style: {\n          fontSize: '1em'\n        }\n      }, ' ', resetIcon, ' Reset Configuration')), React.createElement('hr', {\n        style: {\n          width: '100%'\n        }\n      })), React.createElement('div', {\n        className: 'form-group'\n      }, React.createElement('br', null), React.createElement('br', null), React.createElement('br', null)))));\n    }\n  }]);\n  return HermodReactConfig;\n}(HermodReactComponent);\n\nvar HermodReactSatellite = function (_Component) {\n  inherits(HermodReactSatellite, _Component);\n\n  function HermodReactSatellite(props) {\n    classCallCheck(this, HermodReactSatellite);\n\n    var _this = possibleConstructorReturn(this, (HermodReactSatellite.__proto__ || Object.getPrototypeOf(HermodReactSatellite)).call(this, props));\n\n    _this.siteId = props.siteId ? props.siteId : 'browser_' + parseInt(Math.random() * 100000000, 10);\n    _this.inputGainNodes = [];\n    _this.state = {\n      showConfig: false,\n      config: {}\n    };\n    _this.setLogData = _this.setLogData.bind(_this);\n    _this.setConfig = _this.setConfig.bind(_this);\n    _this.showConfig = _this.showConfig.bind(_this);\n    _this.hideConfig = _this.hideConfig.bind(_this);\n    _this.addInputGainNode = _this.addInputGainNode.bind(_this);\n    _this.logger = props.logger ? props.logger : new HermodLogger(Object.assign({\n      logAudio: false,\n      setLogData: _this.setLogData\n    }, props));\n    var configString = localStorage.getItem(_this.appendUserId('Hermodmicrophone_config', props.user));\n    var config = null;\n\n    try {\n      config = JSON.parse(configString);\n    } catch (e) {}\n\n    if (config) {\n      _this.state.config = config;\n    } else {\n      // default config\n      var newConfig = _this.getDefaultConfig();\n\n      _this.state.config = newConfig;\n      localStorage.setItem(_this.appendUserId('Hermodmicrophone_config', _this.props.user), JSON.stringify(newConfig));\n    }\n\n    return _this;\n  }\n\n  createClass(HermodReactSatellite, [{\n    key: 'appendUserId',\n    value: function appendUserId(text, user) {\n      if (user && user._id) {\n        return text + \"_\" + user._id;\n      } else {\n        return text;\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {//console.log('sat comp mount');\n    }\n  }, {\n    key: 'setLogData',\n    // force update\n    value: function setLogData(sites, messages, sessionStatus, sessionStatusText, hotwordListening, audioListening) {\n      this.setState(this.state);\n    }\n  }, {\n    key: 'setConfig',\n    value: function setConfig(config) {\n      this.setState({\n        config: config\n      });\n    }\n  }, {\n    key: 'showConfig',\n    value: function showConfig() {\n      this.setState({\n        showConfig: true\n      });\n    }\n  }, {\n    key: 'hideConfig',\n    value: function hideConfig() {\n      this.setState({\n        showConfig: false\n      });\n    }\n  }, {\n    key: 'addInputGainNode',\n    value: function addInputGainNode(node) {\n      this.inputGainNodes.push(node);\n    }\n  }, {\n    key: 'getDefaultConfig',\n    value: function getDefaultConfig() {\n      //console.log(['GDC',this.state]);\n      return {\n        inputvolume: '70',\n        outputvolume: '70',\n        voicevolume: '70',\n        ttsvoice: 'default',\n        //this.state.voices && this.state.voices.length > 0 ? this.state.voices[0].name :\n        voicerate: '50',\n        voicepitch: '50',\n        hotword: 'browser:oklamp',\n        hotwordsensitivity: '50',\n        enabletts: 'yes',\n        enableaudio: 'yes',\n        enablenotifications: 'yes'\n      };\n    }\n  }, {\n    key: 'render',\n    //  \n    value: function render() {\n      //console.log('sate render');\n      //return <b>eeek</b>\n      var position = this.props.position ? this.props.position : 'top left';\n      return React.createElement('div', {\n        id: 'Hermodreactsatellite'\n      }, React.createElement(HermodReactMicrophone, _extends({}, this.props, {\n        position: position,\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config,\n        showConfig: this.showConfig,\n        hideConfig: this.hideConfig,\n        addInputGainNode: this.addInputGainNode\n      })), React.createElement('div', {\n        style: {\n          width: '100%',\n          clear: 'both'\n        }\n      }, '\\xA0'), this.state.showConfig && React.createElement(HermodReactConfig, _extends({}, this.props, {\n        setConfig: this.setConfig,\n        configurationChange: this.setConfig,\n        hideConfig: this.hideConfig,\n        config: this.state.config,\n        addInputGainNode: this.addInputGainNode,\n        inputGainNodes: this.inputGainNodes\n      })));\n    }\n  }, {\n    key: 'drender',\n    //  \n    value: function drender() {\n      //console.log('sate render');\n      //return <b>eeek</b>\n      var position = this.props.position ? this.props.position : 'top left';\n      return React.createElement('div', {\n        id: 'Hermodreactsatellite'\n      }, React.createElement(HermodReactHotwordServer, _extends({}, this.props, {\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config,\n        addInputGainNode: this.addInputGainNode\n      })), React.createElement(HermodReactMicrophone, _extends({}, this.props, {\n        position: position,\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config,\n        showConfig: this.showConfig,\n        hideConfig: this.hideConfig,\n        addInputGainNode: this.addInputGainNode\n      })), React.createElement(HermodReactTts, _extends({}, this.props, {\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config\n      })), React.createElement(HermodReactSpeaker, _extends({}, this.props, {\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config\n      })), this.props.intents && React.createElement(HermodAppServer, _extends({}, this.props, {\n        logger: this.logger,\n        siteId: this.siteId,\n        config: this.state.config\n      })), React.createElement('div', {\n        style: {\n          width: '100%',\n          clear: 'both'\n        }\n      }, '\\xA0'), this.state.showConfig && React.createElement(HermodReactConfig, _extends({}, this.props, {\n        setConfig: this.setConfig,\n        configurationChange: this.setConfig,\n        hideConfig: this.hideConfig,\n        config: this.state.config,\n        addInputGainNode: this.addInputGainNode,\n        inputGainNodes: this.inputGainNodes\n      })));\n    }\n  }]);\n  return HermodReactSatellite;\n}(Component);\n\nexport { HermodMqttServer, HermodLogger$1 as HermodLogger, HermodReactComponent, HermodReactMicrophone, HermodReactSpeaker, HermodAppServer as HermodReactAppServer, HermodReactHotwordServer, HermodReactTts, HermodReactLogger, HermodReactFlatLogger, HermodReactSatellite };","import React, { Component } from 'react'\n\nimport {HermodLogger,HermodReactLogger,HermodReactFlatLogger,HermodReactSatellite} from 'hermod-react-satellite'\n\nexport default class App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state={}\n        this.setLogData = this.setLogData.bind(this);\n        this.siteId = 'browser_demo'; //+parseInt(Math.random()*100000000,10);\n        \n         //\n        this.logger = new HermodLogger(Object.assign({subscribe:'#',siteId:this.siteId,username:'admin',password:'admin',logAudio:true,setLogData:this.setLogData},props));\n  \n        /**\n         *  INTENT examples from meeka@home \n         * !! Note that intent functions are bound to the HermodReactAppServer class to supply \"this\" context\n         * !! Note that intent functions return a promise\n         */\n         \n        this.intents = {\n            'syntithenai:open_window': function(payload) {\n                let that = this;\n                return new Promise(function(resolve,reject) {\n                    let slots = that.cleanSlots(payload.slots)\n                    console.log(slots,that);\n                    that.logger.say(payload.siteId,'open window '+ slots.search_topic.value);\n                    resolve();\n                });\n            },\n            'syntithenai:close_window': function(payload) {\n                let that = this;\n                return new Promise(function(resolve,reject) {\n                    let slots = that.cleanSlots(payload.slots)\n                    console.log(slots,that);\n                    that.logger.say(payload.siteId,'close window '+ slots.search_topic.value)\n                    resolve();\n                });\n            },\n            'syntithenai:list_windows': function(payload) {\n                let that = this;\n                return new Promise(function(resolve,reject) {\n                    that.logger.say(payload.siteId,'weather is eek')\n                    resolve(); \n                });\n            },\n            'syntithenai:get_time': function(payload) {\n                let that = this;\n                return new Promise(function(resolve,reject) {\n                    let now = new Date();\n                    let minutes = now.getMinutes();\n                    let hours = now.getHours();\n                    let amPm = hours > 11 ? 'PM' : 'AM';\n                    hours = hours % 12;\n                     if (minutes < 10) {\n                        minutes = \"0\" + minutes;\n                    }\n                    that.logger.say(payload.siteId,'The time is '+hours+ ':' + minutes + ' ' + amPm);\n                    resolve();\n                });\n            },\n            'syntithenai:get_date': function(payload) {\n                let that = this;\n                return new Promise(function(resolve,reject) {\n                    let now = new Date();\n                    let months=['January','February','March','April','May','June','July','August','September','October','November','December']\n                    let day = now.getDate   ();\n                    let month = months[now.getMonth()];\n                    let year = now.getFullYear();\n                    that.logger.say(payload.siteId,'The date is '+day+ ' ' + month + ' ' + year);\n                    resolve();  \n                });\n            },\n        }\n    \n    };\n\n   \n   // force update\n   setLogData(sites,messages,sessionStatus,sessionStatusText,hotwordListening,audioListening) {\n        this.setState( this.state );\n   };\n   \n    startWaiting() {\n        if (!this.state.waiting) this.setState({waiting:true});\n    };\n    \n    stopWaiting() {\n        if (this.state.waiting)  this.setState({waiting:false});\n    };\n    \n       \n    onLogin(user,token) {\n       // console.log(['ONLOGIN',user,token]);\n        this.setState({user:user,token:token});\n    };\n    \n    onLogout() {\n       // console.log(['ONLOGout']);\n        this.setState({user:null,token:null});\n    };\n \n          \n                  \n  render () {\n    return (\n        <div>\n             <HermodReactSatellite logger={this.logger} siteId={this.siteId} intents={this.intents} />\n           \n             <br/><br/><br/><br/><br/><br/><br/>\n             <hr/>\n            <HermodReactLogger logger={this.logger} {...this.logger.state} siteId={null}/>\n            <hr/>\n            <HermodReactFlatLogger logger={this.logger} {...this.logger.state} siteId={null}/>\n            \n        </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App' \n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}